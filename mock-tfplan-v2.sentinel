terraform_version = "1.3.7"

planned_values = {
	"outputs": {},
	"resources": {
		"module.ec2.aws_instance.this": {
			"address":        "module.ec2.aws_instance.this",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.ec2",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_instance",
			"values": {
				"ami": "REDACTED_SENSITIVE",
				"credit_specification": [],
				"get_password_data":    false,
				"hibernation":          null,
				"instance_type":        "t3.micro",
				"launch_template":      [],
				"network_interface": [
					{
						"delete_on_termination": false,
						"device_index":          0,
						"network_card_index":    0,
					},
				],
				"source_dest_check": null,
				"tags": {
					"Name": "tfc-demo-prod",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "tfc-demo-prod",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts":                    null,
				"user_data_replace_on_change": false,
				"volume_tags":                 null,
			},
		},
		"module.ec2.aws_network_interface.this": {
			"address":        "module.ec2.aws_network_interface.this",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.ec2",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_network_interface",
			"values": {
				"description":               null,
				"ipv6_address_list_enabled": false,
				"private_ip_list_enabled":   false,
				"source_dest_check":         true,
				"tags":                      null,
				"tags_all": {
					"Env":        "prod",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
			},
		},
		"module.vpc.aws_internet_gateway.this[0]": {
			"address":        "module.vpc.aws_internet_gateway.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_internet_gateway",
			"values": {
				"tags": {
					"Name": "prod-vpc",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
		},
		"module.vpc.aws_route.public_internet_gateway[0]": {
			"address":        "module.vpc.aws_route.public_internet_gateway[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public_internet_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route",
			"values": {
				"carrier_gateway_id":          null,
				"core_network_arn":            null,
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": null,
				"destination_prefix_list_id":  null,
				"egress_only_gateway_id":      null,
				"local_gateway_id":            null,
				"nat_gateway_id":              null,
				"timeouts": {
					"create": "5m",
					"delete": null,
					"update": null,
				},
				"transit_gateway_id":        null,
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": null,
			},
		},
		"module.vpc.aws_route_table.private[0]": {
			"address":        "module.vpc.aws_route_table.private[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table",
			"values": {
				"tags": {
					"Name": "prod-vpc-private-ap-northeast-1a",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc-private-ap-northeast-1a",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
		},
		"module.vpc.aws_route_table.private[1]": {
			"address":        "module.vpc.aws_route_table.private[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table",
			"values": {
				"tags": {
					"Name": "prod-vpc-private-ap-northeast-1c",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc-private-ap-northeast-1c",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
		},
		"module.vpc.aws_route_table.public[0]": {
			"address":        "module.vpc.aws_route_table.public[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table",
			"values": {
				"tags": {
					"Name": "prod-vpc-public",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc-public",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
		},
		"module.vpc.aws_route_table_association.private[0]": {
			"address":        "module.vpc.aws_route_table_association.private[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id": null,
			},
		},
		"module.vpc.aws_route_table_association.private[1]": {
			"address":        "module.vpc.aws_route_table_association.private[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id": null,
			},
		},
		"module.vpc.aws_route_table_association.public[0]": {
			"address":        "module.vpc.aws_route_table_association.public[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id": null,
			},
		},
		"module.vpc.aws_route_table_association.public[1]": {
			"address":        "module.vpc.aws_route_table_association.public[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_route_table_association",
			"values": {
				"gateway_id": null,
			},
		},
		"module.vpc.aws_subnet.private[0]": {
			"address":        "module.vpc.aws_subnet.private[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "ap-northeast-1a",
				"cidr_block":                                     "10.10.1.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        false,
				"outpost_arn":                                    null,
				"tags": {
					"Name": "prod-vpc-private-ap-northeast-1a",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc-private-ap-northeast-1a",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
		},
		"module.vpc.aws_subnet.private[1]": {
			"address":        "module.vpc.aws_subnet.private[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "ap-northeast-1c",
				"cidr_block":                                     "10.10.2.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        false,
				"outpost_arn":                                    null,
				"tags": {
					"Name": "prod-vpc-private-ap-northeast-1c",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc-private-ap-northeast-1c",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
		},
		"module.vpc.aws_subnet.public[0]": {
			"address":        "module.vpc.aws_subnet.public[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "ap-northeast-1a",
				"cidr_block":                                     "10.10.101.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        true,
				"outpost_arn":                                    null,
				"tags": {
					"Name": "prod-vpc-public-ap-northeast-1a",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc-public-ap-northeast-1a",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
		},
		"module.vpc.aws_subnet.public[1]": {
			"address":        "module.vpc.aws_subnet.public[1]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_subnet",
			"values": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "ap-northeast-1c",
				"cidr_block":                                     "10.10.102.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        true,
				"outpost_arn":                                    null,
				"tags": {
					"Name": "prod-vpc-public-ap-northeast-1c",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc-public-ap-northeast-1c",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
		},
		"module.vpc.aws_vpc.this[0]": {
			"address":        "module.vpc.aws_vpc.this[0]",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"tainted":        false,
			"type":           "aws_vpc",
			"values": {
				"assign_generated_ipv6_cidr_block": null,
				"cidr_block":                       "10.10.0.0/16",
				"enable_dns_hostnames":             false,
				"enable_dns_support":               true,
				"instance_tenancy":                 "default",
				"ipv4_ipam_pool_id":                null,
				"ipv4_netmask_length":              null,
				"ipv6_ipam_pool_id":                null,
				"ipv6_netmask_length":              null,
				"tags": {
					"Name": "prod-vpc",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
			},
		},
	},
}

variables = {}

resource_changes = {
	"module.ec2.aws_instance.this": {
		"address": "module.ec2.aws_instance.this",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"ami": "REDACTED_SENSITIVE",
				"credit_specification": [],
				"get_password_data":    false,
				"hibernation":          null,
				"instance_type":        "t3.micro",
				"launch_template":      [],
				"network_interface": [
					{
						"delete_on_termination": false,
						"device_index":          0,
						"network_card_index":    0,
					},
				],
				"source_dest_check": null,
				"tags": {
					"Name": "tfc-demo-prod",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "tfc-demo-prod",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts":                    null,
				"user_data_replace_on_change": false,
				"volume_tags":                 null,
			},
			"after_unknown": {
				"arn": true,
				"associate_public_ip_address":        true,
				"availability_zone":                  true,
				"capacity_reservation_specification": true,
				"cpu_core_count":                     true,
				"cpu_threads_per_core":               true,
				"credit_specification":               [],
				"disable_api_stop":                   true,
				"disable_api_termination":            true,
				"ebs_block_device":                   true,
				"ebs_optimized":                      true,
				"enclave_options":                    true,
				"ephemeral_block_device":             true,
				"host_id":                            true,
				"host_resource_group_arn":            true,
				"iam_instance_profile":               true,
				"id": true,
				"instance_initiated_shutdown_behavior": true,
				"instance_state":                       true,
				"ipv6_address_count":                   true,
				"ipv6_addresses":                       true,
				"key_name":                             true,
				"launch_template":                      [],
				"maintenance_options":                  true,
				"metadata_options":                     true,
				"monitoring":                           true,
				"network_interface": [
					{
						"network_interface_id": true,
					},
				],
				"outpost_arn":                  true,
				"password_data":                true,
				"placement_group":              true,
				"placement_partition_number":   true,
				"primary_network_interface_id": true,
				"private_dns":                  true,
				"private_dns_name_options":     true,
				"private_ip":                   true,
				"public_dns":                   true,
				"public_ip":                    true,
				"root_block_device":            true,
				"secondary_private_ips":        true,
				"security_groups":              true,
				"subnet_id":                    true,
				"tags":                         {},
				"tags_all":                     {},
				"tenancy":                      true,
				"user_data":                    true,
				"user_data_base64":             true,
				"vpc_security_group_ids":       true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.ec2",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_instance",
	},
	"module.ec2.aws_network_interface.this": {
		"address": "module.ec2.aws_network_interface.this",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"description":               null,
				"ipv6_address_list_enabled": false,
				"private_ip_list_enabled":   false,
				"source_dest_check":         true,
				"tags":                      null,
				"tags_all": {
					"Env":        "prod",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
			},
			"after_unknown": {
				"arn":                true,
				"attachment":         true,
				"id":                 true,
				"interface_type":     true,
				"ipv4_prefix_count":  true,
				"ipv4_prefixes":      true,
				"ipv6_address_count": true,
				"ipv6_address_list":  true,
				"ipv6_addresses":     true,
				"ipv6_prefix_count":  true,
				"ipv6_prefixes":      true,
				"mac_address":        true,
				"outpost_arn":        true,
				"owner_id":           true,
				"private_dns_name":   true,
				"private_ip":         true,
				"private_ip_list":    true,
				"private_ips":        true,
				"private_ips_count":  true,
				"security_groups":    true,
				"subnet_id":          true,
				"tags_all":           {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.ec2",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_network_interface",
	},
	"module.vpc.aws_internet_gateway.this[0]": {
		"address": "module.vpc.aws_internet_gateway.this[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"tags": {
					"Name": "prod-vpc",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
			"after_unknown": {
				"arn":      true,
				"id":       true,
				"owner_id": true,
				"tags":     {},
				"tags_all": {},
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_internet_gateway",
	},
	"module.vpc.aws_route.public_internet_gateway[0]": {
		"address": "module.vpc.aws_route.public_internet_gateway[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"carrier_gateway_id":          null,
				"core_network_arn":            null,
				"destination_cidr_block":      "0.0.0.0/0",
				"destination_ipv6_cidr_block": null,
				"destination_prefix_list_id":  null,
				"egress_only_gateway_id":      null,
				"local_gateway_id":            null,
				"nat_gateway_id":              null,
				"timeouts": {
					"create": "5m",
					"delete": null,
					"update": null,
				},
				"transit_gateway_id":        null,
				"vpc_endpoint_id":           null,
				"vpc_peering_connection_id": null,
			},
			"after_unknown": {
				"gateway_id":           true,
				"id":                   true,
				"instance_id":          true,
				"instance_owner_id":    true,
				"network_interface_id": true,
				"origin":               true,
				"route_table_id":       true,
				"state":                true,
				"timeouts":             {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public_internet_gateway",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route",
	},
	"module.vpc.aws_route_table.private[0]": {
		"address": "module.vpc.aws_route_table.private[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"tags": {
					"Name": "prod-vpc-private-ap-northeast-1a",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc-private-ap-northeast-1a",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
			"after_unknown": {
				"arn":              true,
				"id":               true,
				"owner_id":         true,
				"propagating_vgws": true,
				"route":            true,
				"tags":             {},
				"tags_all":         {},
				"vpc_id":           true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table",
	},
	"module.vpc.aws_route_table.private[1]": {
		"address": "module.vpc.aws_route_table.private[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"tags": {
					"Name": "prod-vpc-private-ap-northeast-1c",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc-private-ap-northeast-1c",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
			"after_unknown": {
				"arn":              true,
				"id":               true,
				"owner_id":         true,
				"propagating_vgws": true,
				"route":            true,
				"tags":             {},
				"tags_all":         {},
				"vpc_id":           true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table",
	},
	"module.vpc.aws_route_table.public[0]": {
		"address": "module.vpc.aws_route_table.public[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"tags": {
					"Name": "prod-vpc-public",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc-public",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
			"after_unknown": {
				"arn":              true,
				"id":               true,
				"owner_id":         true,
				"propagating_vgws": true,
				"route":            true,
				"tags":             {},
				"tags_all":         {},
				"vpc_id":           true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table",
	},
	"module.vpc.aws_route_table_association.private[0]": {
		"address": "module.vpc.aws_route_table_association.private[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"gateway_id": null,
			},
			"after_unknown": {
				"id":             true,
				"route_table_id": true,
				"subnet_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.private[1]": {
		"address": "module.vpc.aws_route_table_association.private[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"gateway_id": null,
			},
			"after_unknown": {
				"id":             true,
				"route_table_id": true,
				"subnet_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.public[0]": {
		"address": "module.vpc.aws_route_table_association.public[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"gateway_id": null,
			},
			"after_unknown": {
				"id":             true,
				"route_table_id": true,
				"subnet_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_route_table_association.public[1]": {
		"address": "module.vpc.aws_route_table_association.public[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"gateway_id": null,
			},
			"after_unknown": {
				"id":             true,
				"route_table_id": true,
				"subnet_id":      true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_route_table_association",
	},
	"module.vpc.aws_subnet.private[0]": {
		"address": "module.vpc.aws_subnet.private[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "ap-northeast-1a",
				"cidr_block":                                     "10.10.1.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        false,
				"outpost_arn":                                    null,
				"tags": {
					"Name": "prod-vpc-private-ap-northeast-1a",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc-private-ap-northeast-1a",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
			"after_unknown": {
				"arn": true,
				"availability_zone_id": true,
				"id": true,
				"ipv6_cidr_block_association_id":      true,
				"owner_id":                            true,
				"private_dns_hostname_type_on_launch": true,
				"tags":     {},
				"tags_all": {},
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_subnet.private[1]": {
		"address": "module.vpc.aws_subnet.private[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "ap-northeast-1c",
				"cidr_block":                                     "10.10.2.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        false,
				"outpost_arn":                                    null,
				"tags": {
					"Name": "prod-vpc-private-ap-northeast-1c",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc-private-ap-northeast-1c",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
			"after_unknown": {
				"arn": true,
				"availability_zone_id": true,
				"id": true,
				"ipv6_cidr_block_association_id":      true,
				"owner_id":                            true,
				"private_dns_hostname_type_on_launch": true,
				"tags":     {},
				"tags_all": {},
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "private",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_subnet.public[0]": {
		"address": "module.vpc.aws_subnet.public[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "ap-northeast-1a",
				"cidr_block":                                     "10.10.101.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        true,
				"outpost_arn":                                    null,
				"tags": {
					"Name": "prod-vpc-public-ap-northeast-1a",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc-public-ap-northeast-1a",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
			"after_unknown": {
				"arn": true,
				"availability_zone_id": true,
				"id": true,
				"ipv6_cidr_block_association_id":      true,
				"owner_id":                            true,
				"private_dns_hostname_type_on_launch": true,
				"tags":     {},
				"tags_all": {},
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_subnet.public[1]": {
		"address": "module.vpc.aws_subnet.public[1]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_ipv6_address_on_creation":                false,
				"availability_zone":                              "ap-northeast-1c",
				"cidr_block":                                     "10.10.102.0/24",
				"customer_owned_ipv4_pool":                       null,
				"enable_dns64":                                   false,
				"enable_resource_name_dns_a_record_on_launch":    false,
				"enable_resource_name_dns_aaaa_record_on_launch": false,
				"ipv6_cidr_block":                                null,
				"ipv6_native":                                    false,
				"map_customer_owned_ip_on_launch":                null,
				"map_public_ip_on_launch":                        true,
				"outpost_arn":                                    null,
				"tags": {
					"Name": "prod-vpc-public-ap-northeast-1c",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc-public-ap-northeast-1c",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
				"timeouts": null,
			},
			"after_unknown": {
				"arn": true,
				"availability_zone_id": true,
				"id": true,
				"ipv6_cidr_block_association_id":      true,
				"owner_id":                            true,
				"private_dns_hostname_type_on_launch": true,
				"tags":     {},
				"tags_all": {},
				"vpc_id":   true,
			},
			"before": null,
		},
		"deposed":        "",
		"index":          1,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "public",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_subnet",
	},
	"module.vpc.aws_vpc.this[0]": {
		"address": "module.vpc.aws_vpc.this[0]",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"assign_generated_ipv6_cidr_block": null,
				"cidr_block":                       "10.10.0.0/16",
				"enable_dns_hostnames":             false,
				"enable_dns_support":               true,
				"instance_tenancy":                 "default",
				"ipv4_ipam_pool_id":                null,
				"ipv4_netmask_length":              null,
				"ipv6_ipam_pool_id":                null,
				"ipv6_netmask_length":              null,
				"tags": {
					"Name": "prod-vpc",
				},
				"tags_all": {
					"Env":        "prod",
					"Name":       "prod-vpc",
					"SystemName": "tfc-demo",
					"Terraform":  "true",
				},
			},
			"after_unknown": {
				"arn": true,
				"default_network_acl_id":               true,
				"default_route_table_id":               true,
				"default_security_group_id":            true,
				"dhcp_options_id":                      true,
				"enable_classiclink":                   true,
				"enable_classiclink_dns_support":       true,
				"enable_network_address_usage_metrics": true,
				"id": true,
				"ipv6_association_id":                  true,
				"ipv6_cidr_block":                      true,
				"ipv6_cidr_block_network_border_group": true,
				"main_route_table_id":                  true,
				"owner_id":                             true,
				"tags":                                 {},
				"tags_all":                             {},
			},
			"before": null,
		},
		"deposed":        "",
		"index":          0,
		"mode":           "managed",
		"module_address": "module.vpc",
		"name":           "this",
		"provider_name":  "registry.terraform.io/hashicorp/aws",
		"type":           "aws_vpc",
	},
}

output_changes = {}

raw = {
	"configuration": {
		"provider_config": {
			"aws": {
				"expressions": {
					"default_tags": [
						{
							"tags": {
								"constant_value": {
									"Env":        "prod",
									"SystemName": "tfc-demo",
									"Terraform":  "true",
								},
							},
						},
					],
					"region": {
						"constant_value": "ap-northeast-1",
					},
				},
				"full_name":          "registry.terraform.io/hashicorp/aws",
				"name":               "aws",
				"version_constraint": "~> 4.52.0",
			},
		},
		"root_module": {
			"module_calls": {
				"ec2": {
					"expressions": {
						"instance_name": {
							"constant_value": "tfc-demo-prod",
						},
						"subnet_id": {
							"references": [
								"module.vpc.private_subnets[0]",
								"module.vpc.private_subnets",
								"module.vpc",
							],
						},
					},
					"module": {
						"resources": [
							{
								"address": "aws_instance.this",
								"expressions": {
									"ami": {
										"references": [
											"data.aws_ssm_parameter.amzn2_ami.value",
											"data.aws_ssm_parameter.amzn2_ami",
										],
									},
									"instance_type": {
										"constant_value": "t3.micro",
									},
									"network_interface": [
										{
											"device_index": {
												"constant_value": 0,
											},
											"network_interface_id": {
												"references": [
													"aws_network_interface.this.id",
													"aws_network_interface.this",
												],
											},
										},
									],
									"tags": {
										"references": [
											"var.instance_name",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_instance",
							},
							{
								"address": "aws_network_interface.this",
								"expressions": {
									"subnet_id": {
										"references": [
											"var.subnet_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_interface",
							},
							{
								"address": "data.aws_ssm_parameter.amzn2_ami",
								"expressions": {
									"name": {
										"constant_value": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
									},
								},
								"mode":                "data",
								"name":                "amzn2_ami",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_ssm_parameter",
							},
						],
						"variables": {
							"instance_name": {},
							"subnet_id":     {},
						},
					},
					"source": "../../modules/ec2",
				},
				"vpc": {
					"expressions": {
						"azs": {
							"constant_value": [
								"ap-northeast-1a",
								"ap-northeast-1c",
							],
						},
						"cidr": {
							"constant_value": "10.10.0.0/16",
						},
						"name": {
							"constant_value": "prod-vpc",
						},
						"private_subnets": {
							"constant_value": [
								"10.10.1.0/24",
								"10.10.2.0/24",
							],
						},
						"public_subnets": {
							"constant_value": [
								"10.10.101.0/24",
								"10.10.102.0/24",
							],
						},
					},
					"module": {
						"outputs": {
							"azs": {
								"description": "A list of availability zones specified as argument to this module",
								"expression": {
									"references": [
										"var.azs",
									],
								},
							},
							"cgw_arns": {
								"description": "List of ARNs of Customer Gateway",
								"expression": {
									"references": [
										"aws_customer_gateway.this",
									],
								},
							},
							"cgw_ids": {
								"description": "List of IDs of Customer Gateway",
								"expression": {
									"references": [
										"aws_customer_gateway.this",
									],
								},
							},
							"database_internet_gateway_route_id": {
								"description": "ID of the database internet gateway route",
								"expression": {
									"references": [
										"aws_route.database_internet_gateway[0].id",
										"aws_route.database_internet_gateway[0]",
										"aws_route.database_internet_gateway",
									],
								},
							},
							"database_ipv6_egress_route_id": {
								"description": "ID of the database IPv6 egress route",
								"expression": {
									"references": [
										"aws_route.database_ipv6_egress[0].id",
										"aws_route.database_ipv6_egress[0]",
										"aws_route.database_ipv6_egress",
									],
								},
							},
							"database_nat_gateway_route_ids": {
								"description": "List of IDs of the database nat gateway route",
								"expression": {
									"references": [
										"aws_route.database_nat_gateway",
									],
								},
							},
							"database_network_acl_arn": {
								"description": "ARN of the database network ACL",
								"expression": {
									"references": [
										"aws_network_acl.database[0].arn",
										"aws_network_acl.database[0]",
										"aws_network_acl.database",
									],
								},
							},
							"database_network_acl_id": {
								"description": "ID of the database network ACL",
								"expression": {
									"references": [
										"aws_network_acl.database[0].id",
										"aws_network_acl.database[0]",
										"aws_network_acl.database",
									],
								},
							},
							"database_route_table_association_ids": {
								"description": "List of IDs of the database route table association",
								"expression": {
									"references": [
										"aws_route_table_association.database",
									],
								},
							},
							"database_route_table_ids": {
								"description": "List of IDs of database route tables",
								"expression": {
									"references": [
										"aws_route_table.database",
										"aws_route_table.private",
									],
								},
							},
							"database_subnet_arns": {
								"description": "List of ARNs of database subnets",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnet_group": {
								"description": "ID of database subnet group",
								"expression": {
									"references": [
										"aws_db_subnet_group.database[0].id",
										"aws_db_subnet_group.database[0]",
										"aws_db_subnet_group.database",
									],
								},
							},
							"database_subnet_group_name": {
								"description": "Name of database subnet group",
								"expression": {
									"references": [
										"aws_db_subnet_group.database[0].name",
										"aws_db_subnet_group.database[0]",
										"aws_db_subnet_group.database",
									],
								},
							},
							"database_subnets": {
								"description": "List of IDs of database subnets",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of database subnets",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"database_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.database",
									],
								},
							},
							"default_network_acl_id": {
								"description": "The ID of the default network ACL",
								"expression": {
									"references": [
										"aws_vpc.this[0].default_network_acl_id",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"default_route_table_id": {
								"description": "The ID of the default route table",
								"expression": {
									"references": [
										"aws_vpc.this[0].default_route_table_id",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"default_security_group_id": {
								"description": "The ID of the security group created by default on VPC creation",
								"expression": {
									"references": [
										"aws_vpc.this[0].default_security_group_id",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"default_vpc_arn": {
								"description": "The ARN of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].arn",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_cidr_block": {
								"description": "The CIDR block of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].cidr_block",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_default_network_acl_id": {
								"description": "The ID of the default network ACL of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].default_network_acl_id",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_default_route_table_id": {
								"description": "The ID of the default route table of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].default_route_table_id",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_default_security_group_id": {
								"description": "The ID of the security group created by default on Default VPC creation",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].default_security_group_id",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_enable_dns_hostnames": {
								"description": "Whether or not the Default VPC has DNS hostname support",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].enable_dns_hostnames",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_enable_dns_support": {
								"description": "Whether or not the Default VPC has DNS support",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].enable_dns_support",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_id": {
								"description": "The ID of the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].id",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_instance_tenancy": {
								"description": "Tenancy of instances spin up within Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].instance_tenancy",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"default_vpc_main_route_table_id": {
								"description": "The ID of the main route table associated with the Default VPC",
								"expression": {
									"references": [
										"aws_default_vpc.this[0].main_route_table_id",
										"aws_default_vpc.this[0]",
										"aws_default_vpc.this",
									],
								},
							},
							"dhcp_options_id": {
								"description": "The ID of the DHCP options",
								"expression": {
									"references": [
										"aws_vpc_dhcp_options.this[0].id",
										"aws_vpc_dhcp_options.this[0]",
										"aws_vpc_dhcp_options.this",
									],
								},
							},
							"egress_only_internet_gateway_id": {
								"description": "The ID of the egress only Internet Gateway",
								"expression": {
									"references": [
										"aws_egress_only_internet_gateway.this[0].id",
										"aws_egress_only_internet_gateway.this[0]",
										"aws_egress_only_internet_gateway.this",
									],
								},
							},
							"elasticache_network_acl_arn": {
								"description": "ARN of the elasticache network ACL",
								"expression": {
									"references": [
										"aws_network_acl.elasticache[0].arn",
										"aws_network_acl.elasticache[0]",
										"aws_network_acl.elasticache",
									],
								},
							},
							"elasticache_network_acl_id": {
								"description": "ID of the elasticache network ACL",
								"expression": {
									"references": [
										"aws_network_acl.elasticache[0].id",
										"aws_network_acl.elasticache[0]",
										"aws_network_acl.elasticache",
									],
								},
							},
							"elasticache_route_table_association_ids": {
								"description": "List of IDs of the elasticache route table association",
								"expression": {
									"references": [
										"aws_route_table_association.elasticache",
									],
								},
							},
							"elasticache_route_table_ids": {
								"description": "List of IDs of elasticache route tables",
								"expression": {
									"references": [
										"aws_route_table.elasticache",
										"aws_route_table.private",
									],
								},
							},
							"elasticache_subnet_arns": {
								"description": "List of ARNs of elasticache subnets",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnet_group": {
								"description": "ID of elasticache subnet group",
								"expression": {
									"references": [
										"aws_elasticache_subnet_group.elasticache[0].id",
										"aws_elasticache_subnet_group.elasticache[0]",
										"aws_elasticache_subnet_group.elasticache",
									],
								},
							},
							"elasticache_subnet_group_name": {
								"description": "Name of elasticache subnet group",
								"expression": {
									"references": [
										"aws_elasticache_subnet_group.elasticache[0].name",
										"aws_elasticache_subnet_group.elasticache[0]",
										"aws_elasticache_subnet_group.elasticache",
									],
								},
							},
							"elasticache_subnets": {
								"description": "List of IDs of elasticache subnets",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of elasticache subnets",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"elasticache_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.elasticache",
									],
								},
							},
							"igw_arn": {
								"description": "The ARN of the Internet Gateway",
								"expression": {
									"references": [
										"aws_internet_gateway.this[0].arn",
										"aws_internet_gateway.this[0]",
										"aws_internet_gateway.this",
									],
								},
							},
							"igw_id": {
								"description": "The ID of the Internet Gateway",
								"expression": {
									"references": [
										"aws_internet_gateway.this[0].id",
										"aws_internet_gateway.this[0]",
										"aws_internet_gateway.this",
									],
								},
							},
							"intra_network_acl_arn": {
								"description": "ARN of the intra network ACL",
								"expression": {
									"references": [
										"aws_network_acl.intra[0].arn",
										"aws_network_acl.intra[0]",
										"aws_network_acl.intra",
									],
								},
							},
							"intra_network_acl_id": {
								"description": "ID of the intra network ACL",
								"expression": {
									"references": [
										"aws_network_acl.intra[0].id",
										"aws_network_acl.intra[0]",
										"aws_network_acl.intra",
									],
								},
							},
							"intra_route_table_association_ids": {
								"description": "List of IDs of the intra route table association",
								"expression": {
									"references": [
										"aws_route_table_association.intra",
									],
								},
							},
							"intra_route_table_ids": {
								"description": "List of IDs of intra route tables",
								"expression": {
									"references": [
										"aws_route_table.intra",
									],
								},
							},
							"intra_subnet_arns": {
								"description": "List of ARNs of intra subnets",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnets": {
								"description": "List of IDs of intra subnets",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of intra subnets",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"intra_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.intra",
									],
								},
							},
							"name": {
								"description": "The name of the VPC specified as argument to this module",
								"expression": {
									"references": [
										"var.name",
									],
								},
							},
							"nat_ids": {
								"description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway",
								"expression": {
									"references": [
										"aws_eip.nat",
									],
								},
							},
							"nat_public_ips": {
								"description": "List of public Elastic IPs created for AWS NAT Gateway",
								"expression": {
									"references": [
										"var.reuse_nat_ips",
										"var.external_nat_ips",
										"aws_eip.nat",
									],
								},
							},
							"natgw_ids": {
								"description": "List of NAT Gateway IDs",
								"expression": {
									"references": [
										"aws_nat_gateway.this",
									],
								},
							},
							"outpost_network_acl_arn": {
								"description": "ARN of the outpost network ACL",
								"expression": {
									"references": [
										"aws_network_acl.outpost[0].arn",
										"aws_network_acl.outpost[0]",
										"aws_network_acl.outpost",
									],
								},
							},
							"outpost_network_acl_id": {
								"description": "ID of the outpost network ACL",
								"expression": {
									"references": [
										"aws_network_acl.outpost[0].id",
										"aws_network_acl.outpost[0]",
										"aws_network_acl.outpost",
									],
								},
							},
							"outpost_subnet_arns": {
								"description": "List of ARNs of outpost subnets",
								"expression": {
									"references": [
										"aws_subnet.outpost",
									],
								},
							},
							"outpost_subnets": {
								"description": "List of IDs of outpost subnets",
								"expression": {
									"references": [
										"aws_subnet.outpost",
									],
								},
							},
							"outpost_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of outpost subnets",
								"expression": {
									"references": [
										"aws_subnet.outpost",
									],
								},
							},
							"outpost_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.outpost",
									],
								},
							},
							"private_ipv6_egress_route_ids": {
								"description": "List of IDs of the ipv6 egress route",
								"expression": {
									"references": [
										"aws_route.private_ipv6_egress",
									],
								},
							},
							"private_nat_gateway_route_ids": {
								"description": "List of IDs of the private nat gateway route",
								"expression": {
									"references": [
										"aws_route.private_nat_gateway",
									],
								},
							},
							"private_network_acl_arn": {
								"description": "ARN of the private network ACL",
								"expression": {
									"references": [
										"aws_network_acl.private[0].arn",
										"aws_network_acl.private[0]",
										"aws_network_acl.private",
									],
								},
							},
							"private_network_acl_id": {
								"description": "ID of the private network ACL",
								"expression": {
									"references": [
										"aws_network_acl.private[0].id",
										"aws_network_acl.private[0]",
										"aws_network_acl.private",
									],
								},
							},
							"private_route_table_association_ids": {
								"description": "List of IDs of the private route table association",
								"expression": {
									"references": [
										"aws_route_table_association.private",
									],
								},
							},
							"private_route_table_ids": {
								"description": "List of IDs of private route tables",
								"expression": {
									"references": [
										"aws_route_table.private",
									],
								},
							},
							"private_subnet_arns": {
								"description": "List of ARNs of private subnets",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnets": {
								"description": "List of IDs of private subnets",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of private subnets",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"private_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.private",
									],
								},
							},
							"public_internet_gateway_ipv6_route_id": {
								"description": "ID of the IPv6 internet gateway route",
								"expression": {
									"references": [
										"aws_route.public_internet_gateway_ipv6[0].id",
										"aws_route.public_internet_gateway_ipv6[0]",
										"aws_route.public_internet_gateway_ipv6",
									],
								},
							},
							"public_internet_gateway_route_id": {
								"description": "ID of the internet gateway route",
								"expression": {
									"references": [
										"aws_route.public_internet_gateway[0].id",
										"aws_route.public_internet_gateway[0]",
										"aws_route.public_internet_gateway",
									],
								},
							},
							"public_network_acl_arn": {
								"description": "ARN of the public network ACL",
								"expression": {
									"references": [
										"aws_network_acl.public[0].arn",
										"aws_network_acl.public[0]",
										"aws_network_acl.public",
									],
								},
							},
							"public_network_acl_id": {
								"description": "ID of the public network ACL",
								"expression": {
									"references": [
										"aws_network_acl.public[0].id",
										"aws_network_acl.public[0]",
										"aws_network_acl.public",
									],
								},
							},
							"public_route_table_association_ids": {
								"description": "List of IDs of the public route table association",
								"expression": {
									"references": [
										"aws_route_table_association.public",
									],
								},
							},
							"public_route_table_ids": {
								"description": "List of IDs of public route tables",
								"expression": {
									"references": [
										"aws_route_table.public",
									],
								},
							},
							"public_subnet_arns": {
								"description": "List of ARNs of public subnets",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnets": {
								"description": "List of IDs of public subnets",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of public subnets",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"public_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.public",
									],
								},
							},
							"redshift_network_acl_arn": {
								"description": "ARN of the redshift network ACL",
								"expression": {
									"references": [
										"aws_network_acl.redshift[0].arn",
										"aws_network_acl.redshift[0]",
										"aws_network_acl.redshift",
									],
								},
							},
							"redshift_network_acl_id": {
								"description": "ID of the redshift network ACL",
								"expression": {
									"references": [
										"aws_network_acl.redshift[0].id",
										"aws_network_acl.redshift[0]",
										"aws_network_acl.redshift",
									],
								},
							},
							"redshift_public_route_table_association_ids": {
								"description": "List of IDs of the public redshift route table association",
								"expression": {
									"references": [
										"aws_route_table_association.redshift_public",
									],
								},
							},
							"redshift_route_table_association_ids": {
								"description": "List of IDs of the redshift route table association",
								"expression": {
									"references": [
										"aws_route_table_association.redshift",
									],
								},
							},
							"redshift_route_table_ids": {
								"description": "List of IDs of redshift route tables",
								"expression": {
									"references": [
										"aws_route_table.redshift",
										"aws_route_table.redshift",
										"var.enable_public_redshift",
										"aws_route_table.public",
										"aws_route_table.private",
									],
								},
							},
							"redshift_subnet_arns": {
								"description": "List of ARNs of redshift subnets",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnet_group": {
								"description": "ID of redshift subnet group",
								"expression": {
									"references": [
										"aws_redshift_subnet_group.redshift[0].id",
										"aws_redshift_subnet_group.redshift[0]",
										"aws_redshift_subnet_group.redshift",
									],
								},
							},
							"redshift_subnets": {
								"description": "List of IDs of redshift subnets",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnets_cidr_blocks": {
								"description": "List of cidr_blocks of redshift subnets",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"redshift_subnets_ipv6_cidr_blocks": {
								"description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC",
								"expression": {
									"references": [
										"aws_subnet.redshift",
									],
								},
							},
							"this_customer_gateway": {
								"description": "Map of Customer Gateway attributes",
								"expression": {
									"references": [
										"aws_customer_gateway.this",
									],
								},
							},
							"vgw_arn": {
								"description": "The ARN of the VPN Gateway",
								"expression": {
									"references": [
										"aws_vpn_gateway.this[0].arn",
										"aws_vpn_gateway.this[0]",
										"aws_vpn_gateway.this",
									],
								},
							},
							"vgw_id": {
								"description": "The ID of the VPN Gateway",
								"expression": {
									"references": [
										"aws_vpn_gateway.this[0].id",
										"aws_vpn_gateway.this[0]",
										"aws_vpn_gateway.this",
										"aws_vpn_gateway_attachment.this[0].vpn_gateway_id",
										"aws_vpn_gateway_attachment.this[0]",
										"aws_vpn_gateway_attachment.this",
									],
								},
							},
							"vpc_arn": {
								"description": "The ARN of the VPC",
								"expression": {
									"references": [
										"aws_vpc.this[0].arn",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_cidr_block": {
								"description": "The CIDR block of the VPC",
								"expression": {
									"references": [
										"aws_vpc.this[0].cidr_block",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_enable_dns_hostnames": {
								"description": "Whether or not the VPC has DNS hostname support",
								"expression": {
									"references": [
										"aws_vpc.this[0].enable_dns_hostnames",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_enable_dns_support": {
								"description": "Whether or not the VPC has DNS support",
								"expression": {
									"references": [
										"aws_vpc.this[0].enable_dns_support",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_flow_log_cloudwatch_iam_role_arn": {
								"description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group",
								"expression": {
									"references": [
										"local.flow_log_iam_role_arn",
									],
								},
							},
							"vpc_flow_log_destination_arn": {
								"description": "The ARN of the destination for VPC Flow Logs",
								"expression": {
									"references": [
										"local.flow_log_destination_arn",
									],
								},
							},
							"vpc_flow_log_destination_type": {
								"description": "The type of the destination for VPC Flow Logs",
								"expression": {
									"references": [
										"var.flow_log_destination_type",
									],
								},
							},
							"vpc_flow_log_id": {
								"description": "The ID of the Flow Log resource",
								"expression": {
									"references": [
										"aws_flow_log.this[0].id",
										"aws_flow_log.this[0]",
										"aws_flow_log.this",
									],
								},
							},
							"vpc_id": {
								"description": "The ID of the VPC",
								"expression": {
									"references": [
										"aws_vpc.this[0].id",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_instance_tenancy": {
								"description": "Tenancy of instances spin up within VPC",
								"expression": {
									"references": [
										"aws_vpc.this[0].instance_tenancy",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_ipv6_association_id": {
								"description": "The association ID for the IPv6 CIDR block",
								"expression": {
									"references": [
										"aws_vpc.this[0].ipv6_association_id",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_ipv6_cidr_block": {
								"description": "The IPv6 CIDR block",
								"expression": {
									"references": [
										"aws_vpc.this[0].ipv6_cidr_block",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_main_route_table_id": {
								"description": "The ID of the main route table associated with this VPC",
								"expression": {
									"references": [
										"aws_vpc.this[0].main_route_table_id",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_owner_id": {
								"description": "The ID of the AWS account that owns the VPC",
								"expression": {
									"references": [
										"aws_vpc.this[0].owner_id",
										"aws_vpc.this[0]",
										"aws_vpc.this",
									],
								},
							},
							"vpc_secondary_cidr_blocks": {
								"description": "List of secondary CIDR blocks of the VPC",
								"expression": {
									"references": [
										"aws_vpc_ipv4_cidr_block_association.this",
									],
								},
							},
						},
						"resources": [
							{
								"address": "aws_cloudwatch_log_group.flow_log",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_log_group",
									],
								},
								"expressions": {
									"kms_key_id": {
										"references": [
											"var.flow_log_cloudwatch_log_group_kms_key_id",
										],
									},
									"name": {
										"references": [
											"var.flow_log_cloudwatch_log_group_name_prefix",
											"local.flow_log_cloudwatch_log_group_name_suffix",
										],
									},
									"retention_in_days": {
										"references": [
											"var.flow_log_cloudwatch_log_group_retention_in_days",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "flow_log",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_cloudwatch_log_group",
							},
							{
								"address": "aws_customer_gateway.this",
								"expressions": {
									"bgp_asn": {
										"references": [
											"each.value[\"bgp_asn\"]",
											"each.value",
										],
									},
									"device_name": {
										"references": [
											"each.value",
										],
									},
									"ip_address": {
										"references": [
											"each.value[\"ip_address\"]",
											"each.value",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"each.key",
											"var.tags",
											"var.customer_gateway_tags",
										],
									},
									"type": {
										"constant_value": "ipsec.1",
									},
								},
								"for_each_expression": {
									"references": [
										"var.customer_gateways",
									],
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_customer_gateway",
							},
							{
								"address": "aws_db_subnet_group.database",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.database_subnets",
										"var.create_database_subnet_group",
									],
								},
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.database_subnet_group_name",
											"var.name",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.database",
										],
									},
									"tags": {
										"references": [
											"var.database_subnet_group_name",
											"var.name",
											"var.tags",
											"var.database_subnet_group_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_db_subnet_group",
							},
							{
								"address": "aws_default_network_acl.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.manage_default_network_acl",
									],
								},
								"expressions": {
									"default_network_acl_id": {
										"references": [
											"aws_vpc.this[0].default_network_acl_id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
									"subnet_ids": {},
									"tags": {
										"references": [
											"var.default_network_acl_name",
											"var.name",
											"var.tags",
											"var.default_network_acl_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_default_network_acl",
							},
							{
								"address": "aws_default_route_table.default",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.manage_default_route_table",
									],
								},
								"expressions": {
									"default_route_table_id": {
										"references": [
											"aws_vpc.this[0].default_route_table_id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
									"propagating_vgws": {
										"references": [
											"var.default_route_table_propagating_vgws",
										],
									},
									"tags": {
										"references": [
											"var.default_route_table_name",
											"var.name",
											"var.tags",
											"var.default_route_table_tags",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "default",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_default_route_table",
							},
							{
								"address": "aws_default_security_group.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.manage_default_security_group",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.default_security_group_name",
											"var.name",
											"var.tags",
											"var.default_security_group_tags",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this[0].id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_default_security_group",
							},
							{
								"address": "aws_default_vpc.this",
								"count_expression": {
									"references": [
										"var.manage_default_vpc",
									],
								},
								"expressions": {
									"enable_classiclink": {},
									"enable_dns_hostnames": {
										"references": [
											"var.default_vpc_enable_dns_hostnames",
										],
									},
									"enable_dns_support": {
										"references": [
											"var.default_vpc_enable_dns_support",
										],
									},
									"tags": {
										"references": [
											"var.default_vpc_name",
											"var.tags",
											"var.default_vpc_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_default_vpc",
							},
							{
								"address": "aws_egress_only_internet_gateway.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.create_egress_only_igw",
										"var.enable_ipv6",
										"local.max_subnet_length",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.igw_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_egress_only_internet_gateway",
							},
							{
								"address": "aws_eip.nat",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.enable_nat_gateway",
										"var.reuse_nat_ips",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.azs",
											"var.single_nat_gateway",
											"count.index",
											"var.tags",
											"var.nat_eip_tags",
										],
									},
									"vpc": {
										"constant_value": true,
									},
								},
								"mode":                "managed",
								"name":                "nat",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_eip",
							},
							{
								"address": "aws_elasticache_subnet_group.elasticache",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.elasticache_subnets",
										"var.create_elasticache_subnet_group",
									],
								},
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.elasticache_subnet_group_name",
											"var.name",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.elasticache",
										],
									},
									"tags": {
										"references": [
											"var.elasticache_subnet_group_name",
											"var.name",
											"var.tags",
											"var.elasticache_subnet_group_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_elasticache_subnet_group",
							},
							{
								"address": "aws_flow_log.this",
								"count_expression": {
									"references": [
										"local.enable_flow_log",
									],
								},
								"expressions": {
									"iam_role_arn": {
										"references": [
											"local.flow_log_iam_role_arn",
										],
									},
									"log_destination": {
										"references": [
											"local.flow_log_destination_arn",
										],
									},
									"log_destination_type": {
										"references": [
											"var.flow_log_destination_type",
										],
									},
									"log_format": {
										"references": [
											"var.flow_log_log_format",
										],
									},
									"max_aggregation_interval": {
										"references": [
											"var.flow_log_max_aggregation_interval",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
									"traffic_type": {
										"references": [
											"var.flow_log_traffic_type",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_flow_log",
							},
							{
								"address": "aws_iam_policy.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"name_prefix": {
										"constant_value": "vpc-flow-log-to-cloudwatch-",
									},
									"policy": {
										"references": [
											"data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
											"data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
											"data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy",
							},
							{
								"address": "aws_iam_role.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"assume_role_policy": {
										"references": [
											"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
											"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
											"data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
										],
									},
									"name_prefix": {
										"constant_value": "vpc-flow-log-role-",
									},
									"permissions_boundary": {
										"references": [
											"var.vpc_flow_log_permissions_boundary",
										],
									},
									"tags": {
										"references": [
											"var.tags",
											"var.vpc_flow_log_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_role",
							},
							{
								"address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"policy_arn": {
										"references": [
											"aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
											"aws_iam_policy.vpc_flow_log_cloudwatch[0]",
											"aws_iam_policy.vpc_flow_log_cloudwatch",
										],
									},
									"role": {
										"references": [
											"aws_iam_role.vpc_flow_log_cloudwatch[0].name",
											"aws_iam_role.vpc_flow_log_cloudwatch[0]",
											"aws_iam_role.vpc_flow_log_cloudwatch",
										],
									},
								},
								"mode":                "managed",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_role_policy_attachment",
							},
							{
								"address": "aws_internet_gateway.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.create_igw",
										"var.public_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.igw_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_internet_gateway",
							},
							{
								"address": "aws_nat_gateway.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.enable_nat_gateway",
										"local.nat_gateway_count",
									],
								},
								"depends_on": [
									"aws_internet_gateway.this",
								],
								"expressions": {
									"allocation_id": {
										"references": [
											"local.nat_gateway_ips",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.public",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.azs",
											"var.single_nat_gateway",
											"count.index",
											"var.tags",
											"var.nat_gateway_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_nat_gateway",
							},
							{
								"address": "aws_network_acl.database",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.database_dedicated_network_acl",
										"var.database_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.database",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.database_subnet_suffix",
											"var.tags",
											"var.database_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.elasticache",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.elasticache_dedicated_network_acl",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.elasticache",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.elasticache_subnet_suffix",
											"var.tags",
											"var.elasticache_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.intra",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.intra_dedicated_network_acl",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.intra",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.intra_subnet_suffix",
											"var.tags",
											"var.intra_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.outpost",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.outpost_dedicated_network_acl",
										"var.outpost_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.outpost",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.outpost_subnet_suffix",
											"var.tags",
											"var.outpost_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "outpost",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.private",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.private_dedicated_network_acl",
										"var.private_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.private",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.private_subnet_suffix",
											"var.tags",
											"var.private_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.public",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.public_dedicated_network_acl",
										"var.public_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.public",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.public_subnet_suffix",
											"var.tags",
											"var.public_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl.redshift",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.redshift_dedicated_network_acl",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"subnet_ids": {
										"references": [
											"aws_subnet.redshift",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.redshift_subnet_suffix",
											"var.tags",
											"var.redshift_acl_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl",
							},
							{
								"address": "aws_network_acl_rule.database_inbound",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.database_dedicated_network_acl",
										"var.database_subnets",
										"var.database_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.database[0].id",
											"aws_network_acl.database[0]",
											"aws_network_acl.database",
										],
									},
									"protocol": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.database_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "database_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.database_outbound",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.database_dedicated_network_acl",
										"var.database_subnets",
										"var.database_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.database[0].id",
											"aws_network_acl.database[0]",
											"aws_network_acl.database",
										],
									},
									"protocol": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.database_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "database_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.elasticache_inbound",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.elasticache_dedicated_network_acl",
										"var.elasticache_subnets",
										"var.elasticache_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.elasticache[0].id",
											"aws_network_acl.elasticache[0]",
											"aws_network_acl.elasticache",
										],
									},
									"protocol": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.elasticache_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.elasticache_outbound",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.elasticache_dedicated_network_acl",
										"var.elasticache_subnets",
										"var.elasticache_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.elasticache[0].id",
											"aws_network_acl.elasticache[0]",
											"aws_network_acl.elasticache",
										],
									},
									"protocol": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.elasticache_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.intra_inbound",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.intra_dedicated_network_acl",
										"var.intra_subnets",
										"var.intra_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.intra[0].id",
											"aws_network_acl.intra[0]",
											"aws_network_acl.intra",
										],
									},
									"protocol": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.intra_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.intra_outbound",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.intra_dedicated_network_acl",
										"var.intra_subnets",
										"var.intra_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.intra[0].id",
											"aws_network_acl.intra[0]",
											"aws_network_acl.intra",
										],
									},
									"protocol": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.intra_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.outpost_inbound",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.outpost_dedicated_network_acl",
										"var.outpost_subnets",
										"var.outpost_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.outpost[0].id",
											"aws_network_acl.outpost[0]",
											"aws_network_acl.outpost",
										],
									},
									"protocol": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.outpost_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "outpost_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.outpost_outbound",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.outpost_dedicated_network_acl",
										"var.outpost_subnets",
										"var.outpost_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.outpost[0].id",
											"aws_network_acl.outpost[0]",
											"aws_network_acl.outpost",
										],
									},
									"protocol": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.outpost_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "outpost_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.private_inbound",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.private_dedicated_network_acl",
										"var.private_subnets",
										"var.private_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.private[0].id",
											"aws_network_acl.private[0]",
											"aws_network_acl.private",
										],
									},
									"protocol": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.private_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.private_outbound",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.private_dedicated_network_acl",
										"var.private_subnets",
										"var.private_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.private[0].id",
											"aws_network_acl.private[0]",
											"aws_network_acl.private",
										],
									},
									"protocol": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.private_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.public_inbound",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.public_dedicated_network_acl",
										"var.public_subnets",
										"var.public_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.public[0].id",
											"aws_network_acl.public[0]",
											"aws_network_acl.public",
										],
									},
									"protocol": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.public_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.public_outbound",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.public_dedicated_network_acl",
										"var.public_subnets",
										"var.public_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.public[0].id",
											"aws_network_acl.public[0]",
											"aws_network_acl.public",
										],
									},
									"protocol": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.public_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.redshift_inbound",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.redshift_dedicated_network_acl",
										"var.redshift_subnets",
										"var.redshift_inbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": false,
									},
									"from_port": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.redshift[0].id",
											"aws_network_acl.redshift[0]",
											"aws_network_acl.redshift",
										],
									},
									"protocol": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.redshift_inbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift_inbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_network_acl_rule.redshift_outbound",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.redshift_dedicated_network_acl",
										"var.redshift_subnets",
										"var.redshift_outbound_acl_rules",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"egress": {
										"constant_value": true,
									},
									"from_port": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_code": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"icmp_type": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"network_acl_id": {
										"references": [
											"aws_network_acl.redshift[0].id",
											"aws_network_acl.redshift[0]",
											"aws_network_acl.redshift",
										],
									},
									"protocol": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_action": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"rule_number": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
									"to_port": {
										"references": [
											"var.redshift_outbound_acl_rules",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift_outbound",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_network_acl_rule",
							},
							{
								"address": "aws_redshift_subnet_group.redshift",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.redshift_subnets",
										"var.create_redshift_subnet_group",
									],
								},
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.redshift_subnet_group_name",
											"var.name",
										],
									},
									"subnet_ids": {
										"references": [
											"aws_subnet.redshift",
										],
									},
									"tags": {
										"references": [
											"var.redshift_subnet_group_name",
											"var.name",
											"var.tags",
											"var.redshift_subnet_group_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_redshift_subnet_group",
							},
							{
								"address": "aws_route.database_internet_gateway",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.create_igw",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
										"var.create_database_internet_gateway_route",
										"var.create_database_nat_gateway_route",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"gateway_id": {
										"references": [
											"aws_internet_gateway.this[0].id",
											"aws_internet_gateway.this[0]",
											"aws_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database[0].id",
											"aws_route_table.database[0]",
											"aws_route_table.database",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_internet_gateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.database_ipv6_egress",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.create_egress_only_igw",
										"var.enable_ipv6",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
										"var.create_database_internet_gateway_route",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "::/0",
									},
									"egress_only_gateway_id": {
										"references": [
											"aws_egress_only_internet_gateway.this[0].id",
											"aws_egress_only_internet_gateway.this[0]",
											"aws_egress_only_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database[0].id",
											"aws_route_table.database[0]",
											"aws_route_table.database",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_ipv6_egress",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.database_nat_gateway",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
										"var.create_database_internet_gateway_route",
										"var.create_database_nat_gateway_route",
										"var.enable_nat_gateway",
										"var.single_nat_gateway",
										"var.database_subnets",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"nat_gateway_id": {
										"references": [
											"aws_nat_gateway.this",
											"count.index",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.database",
											"count.index",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "database_nat_gateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.private_ipv6_egress",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.create_egress_only_igw",
										"var.enable_ipv6",
										"var.private_subnets",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "::/0",
									},
									"egress_only_gateway_id": {
										"references": [
											"aws_egress_only_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private_ipv6_egress",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.private_nat_gateway",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.enable_nat_gateway",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"references": [
											"var.nat_gateway_destination_cidr_block",
										],
									},
									"nat_gateway_id": {
										"references": [
											"aws_nat_gateway.this",
											"count.index",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "private_nat_gateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.public_internet_gateway",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.create_igw",
										"var.public_subnets",
									],
								},
								"expressions": {
									"destination_cidr_block": {
										"constant_value": "0.0.0.0/0",
									},
									"gateway_id": {
										"references": [
											"aws_internet_gateway.this[0].id",
											"aws_internet_gateway.this[0]",
											"aws_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
									"timeouts": {},
								},
								"mode":                "managed",
								"name":                "public_internet_gateway",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route.public_internet_gateway_ipv6",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.create_igw",
										"var.enable_ipv6",
										"var.public_subnets",
									],
								},
								"expressions": {
									"destination_ipv6_cidr_block": {
										"constant_value": "::/0",
									},
									"gateway_id": {
										"references": [
											"aws_internet_gateway.this[0].id",
											"aws_internet_gateway.this[0]",
											"aws_internet_gateway.this",
										],
									},
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
								},
								"mode":                "managed",
								"name":                "public_internet_gateway_ipv6",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route",
							},
							{
								"address": "aws_route_table.database",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.create_database_subnet_route_table",
										"var.database_subnets",
										"var.single_nat_gateway",
										"var.create_database_internet_gateway_route",
										"var.database_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.single_nat_gateway",
											"var.create_database_internet_gateway_route",
											"var.name",
											"var.database_subnet_suffix",
											"var.name",
											"var.database_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.database_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.elasticache",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.create_elasticache_subnet_route_table",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.elasticache_subnet_suffix",
											"var.tags",
											"var.elasticache_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.intra",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.intra_subnet_suffix",
											"var.tags",
											"var.intra_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.private",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"local.max_subnet_length",
										"local.nat_gateway_count",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.single_nat_gateway",
											"var.name",
											"var.private_subnet_suffix",
											"var.name",
											"var.private_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.private_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.public",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.public_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.public_subnet_suffix",
											"var.tags",
											"var.public_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table.redshift",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.create_redshift_subnet_route_table",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"tags": {
										"references": [
											"var.name",
											"var.redshift_subnet_suffix",
											"var.tags",
											"var.redshift_route_table_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table",
							},
							{
								"address": "aws_route_table_association.database",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.database_subnets",
										"var.database_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.database",
											"aws_route_table.private",
											"var.create_database_subnet_route_table",
											"var.single_nat_gateway",
											"var.create_database_internet_gateway_route",
											"count.index",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.database",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.elasticache",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.elasticache_subnets",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.elasticache",
											"aws_route_table.private",
											"var.single_nat_gateway",
											"var.create_elasticache_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.elasticache",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.intra",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.intra_subnets",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.intra",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.intra",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.outpost",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.outpost_subnets",
										"var.outpost_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.outpost",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "outpost",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.private",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.private_subnets",
										"var.private_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"var.single_nat_gateway",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.private",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.public",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.public_subnets",
										"var.public_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.public[0].id",
											"aws_route_table.public[0]",
											"aws_route_table.public",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.public",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.redshift",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.redshift_subnets",
										"var.enable_public_redshift",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.redshift",
											"aws_route_table.private",
											"var.single_nat_gateway",
											"var.create_redshift_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.redshift",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_route_table_association.redshift_public",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.redshift_subnets",
										"var.enable_public_redshift",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.redshift",
											"aws_route_table.public",
											"var.single_nat_gateway",
											"var.create_redshift_subnet_route_table",
											"count.index",
										],
									},
									"subnet_id": {
										"references": [
											"aws_subnet.redshift",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift_public",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_route_table_association",
							},
							{
								"address": "aws_subnet.database",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.database_subnets",
										"var.database_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.database_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.database_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.database_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.database_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.database_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.database_subnet_names",
											"count.index",
											"var.name",
											"var.database_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.database_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "database",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.elasticache",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.elasticache_subnets",
										"var.elasticache_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.elasticache_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.elasticache_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.elasticache_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.elasticache_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.elasticache_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.elasticache_subnet_names",
											"count.index",
											"var.name",
											"var.elasticache_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.elasticache_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "elasticache",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.intra",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.intra_subnets",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.intra_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.intra_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.intra_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.intra_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.intra_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.intra_subnet_names",
											"count.index",
											"var.name",
											"var.intra_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.intra_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.outpost",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.outpost_subnets",
										"var.outpost_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.outpost_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.outpost_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.outpost_az",
										],
									},
									"cidr_block": {
										"references": [
											"var.outpost_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.outpost_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.outpost_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"outpost_arn": {
										"references": [
											"var.outpost_arn",
										],
									},
									"tags": {
										"references": [
											"var.outpost_subnet_names",
											"count.index",
											"var.name",
											"var.outpost_subnet_suffix",
											"var.outpost_az",
											"var.tags",
											"var.outpost_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "outpost",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.private",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.private_subnets",
										"var.private_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.private_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.private_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.private_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.private_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.private_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.private_subnet_names",
											"count.index",
											"var.name",
											"var.private_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.private_subnet_tags",
											"var.private_subnet_tags_per_az",
											"var.azs",
											"count.index",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.public",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.public_subnets",
										"var.one_nat_gateway_per_az",
										"var.public_subnets",
										"var.azs",
										"var.public_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.public_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.public_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.public_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.public_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.public_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"map_public_ip_on_launch": {
										"references": [
											"var.map_public_ip_on_launch",
										],
									},
									"tags": {
										"references": [
											"var.public_subnet_names",
											"count.index",
											"var.name",
											"var.public_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.public_subnet_tags",
											"var.public_subnet_tags_per_az",
											"var.azs",
											"count.index",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_subnet.redshift",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.redshift_subnets",
										"var.redshift_subnets",
									],
								},
								"expressions": {
									"assign_ipv6_address_on_creation": {
										"references": [
											"var.redshift_subnet_assign_ipv6_address_on_creation",
											"var.assign_ipv6_address_on_creation",
											"var.redshift_subnet_assign_ipv6_address_on_creation",
										],
									},
									"availability_zone": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"availability_zone_id": {
										"references": [
											"var.azs",
											"count.index",
											"var.azs",
											"count.index",
										],
									},
									"cidr_block": {
										"references": [
											"var.redshift_subnets",
											"count.index",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.redshift_subnet_ipv6_prefixes",
											"aws_vpc.this[0].ipv6_cidr_block",
											"aws_vpc.this[0]",
											"aws_vpc.this",
											"var.redshift_subnet_ipv6_prefixes",
											"count.index",
										],
									},
									"tags": {
										"references": [
											"var.redshift_subnet_names",
											"count.index",
											"var.name",
											"var.redshift_subnet_suffix",
											"var.azs",
											"count.index",
											"var.tags",
											"var.redshift_subnet_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "redshift",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_subnet",
							},
							{
								"address": "aws_vpc.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
									],
								},
								"expressions": {
									"assign_generated_ipv6_cidr_block": {
										"references": [
											"var.enable_ipv6",
											"var.use_ipam_pool",
										],
									},
									"cidr_block": {
										"references": [
											"var.use_ipam_pool",
											"var.cidr",
										],
									},
									"enable_classiclink":             {},
									"enable_classiclink_dns_support": {},
									"enable_dns_hostnames": {
										"references": [
											"var.enable_dns_hostnames",
										],
									},
									"enable_dns_support": {
										"references": [
											"var.enable_dns_support",
										],
									},
									"instance_tenancy": {
										"references": [
											"var.instance_tenancy",
										],
									},
									"ipv4_ipam_pool_id": {
										"references": [
											"var.ipv4_ipam_pool_id",
										],
									},
									"ipv4_netmask_length": {
										"references": [
											"var.ipv4_netmask_length",
										],
									},
									"ipv6_cidr_block": {
										"references": [
											"var.ipv6_cidr",
										],
									},
									"ipv6_ipam_pool_id": {
										"references": [
											"var.ipv6_ipam_pool_id",
										],
									},
									"ipv6_netmask_length": {
										"references": [
											"var.ipv6_netmask_length",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.vpc_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      1,
								"type":                "aws_vpc",
							},
							{
								"address": "aws_vpc_dhcp_options.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.enable_dhcp_options",
									],
								},
								"expressions": {
									"domain_name": {
										"references": [
											"var.dhcp_options_domain_name",
										],
									},
									"domain_name_servers": {
										"references": [
											"var.dhcp_options_domain_name_servers",
										],
									},
									"netbios_name_servers": {
										"references": [
											"var.dhcp_options_netbios_name_servers",
										],
									},
									"netbios_node_type": {
										"references": [
											"var.dhcp_options_netbios_node_type",
										],
									},
									"ntp_servers": {
										"references": [
											"var.dhcp_options_ntp_servers",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.dhcp_options_tags",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_dhcp_options",
							},
							{
								"address": "aws_vpc_dhcp_options_association.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.enable_dhcp_options",
									],
								},
								"expressions": {
									"dhcp_options_id": {
										"references": [
											"aws_vpc_dhcp_options.this[0].id",
											"aws_vpc_dhcp_options.this[0]",
											"aws_vpc_dhcp_options.this",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_dhcp_options_association",
							},
							{
								"address": "aws_vpc_ipv4_cidr_block_association.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.secondary_cidr_blocks",
										"var.secondary_cidr_blocks",
									],
								},
								"expressions": {
									"cidr_block": {
										"references": [
											"var.secondary_cidr_blocks",
											"count.index",
										],
									},
									"vpc_id": {
										"references": [
											"aws_vpc.this[0].id",
											"aws_vpc.this[0]",
											"aws_vpc.this",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpc_ipv4_cidr_block_association",
							},
							{
								"address": "aws_vpn_gateway.this",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.enable_vpn_gateway",
									],
								},
								"expressions": {
									"amazon_side_asn": {
										"references": [
											"var.amazon_side_asn",
										],
									},
									"availability_zone": {
										"references": [
											"var.vpn_gateway_az",
										],
									},
									"tags": {
										"references": [
											"var.name",
											"var.tags",
											"var.vpn_gateway_tags",
										],
									},
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway",
							},
							{
								"address": "aws_vpn_gateway_attachment.this",
								"count_expression": {
									"references": [
										"var.vpn_gateway_id",
									],
								},
								"expressions": {
									"vpc_id": {
										"references": [
											"local.vpc_id",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"var.vpn_gateway_id",
										],
									},
								},
								"mode":                "managed",
								"name":                "this",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_attachment",
							},
							{
								"address": "aws_vpn_gateway_route_propagation.intra",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.propagate_intra_route_tables_vgw",
										"var.enable_vpn_gateway",
										"var.vpn_gateway_id",
										"var.intra_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.intra",
											"count.index",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"aws_vpn_gateway.this",
											"aws_vpn_gateway_attachment.this",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "intra",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_route_propagation",
							},
							{
								"address": "aws_vpn_gateway_route_propagation.private",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.propagate_private_route_tables_vgw",
										"var.enable_vpn_gateway",
										"var.vpn_gateway_id",
										"var.private_subnets",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.private",
											"count.index",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"aws_vpn_gateway.this",
											"aws_vpn_gateway_attachment.this",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "private",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_route_propagation",
							},
							{
								"address": "aws_vpn_gateway_route_propagation.public",
								"count_expression": {
									"references": [
										"local.create_vpc",
										"var.propagate_public_route_tables_vgw",
										"var.enable_vpn_gateway",
										"var.vpn_gateway_id",
									],
								},
								"expressions": {
									"route_table_id": {
										"references": [
											"aws_route_table.public",
											"count.index",
										],
									},
									"vpn_gateway_id": {
										"references": [
											"aws_vpn_gateway.this",
											"aws_vpn_gateway_attachment.this",
											"count.index",
										],
									},
								},
								"mode":                "managed",
								"name":                "public",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_vpn_gateway_route_propagation",
							},
							{
								"address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"sts:AssumeRole",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"principals": [
												{
													"identifiers": {
														"constant_value": [
															"vpc-flow-logs.amazonaws.com",
														],
													},
													"type": {
														"constant_value": "Service",
													},
												},
											],
											"sid": {
												"constant_value": "AWSVPCFlowLogsAssumeRole",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "flow_log_cloudwatch_assume_role",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
							{
								"address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
								"count_expression": {
									"references": [
										"local.create_flow_log_cloudwatch_iam_role",
									],
								},
								"expressions": {
									"statement": [
										{
											"actions": {
												"constant_value": [
													"logs:CreateLogStream",
													"logs:PutLogEvents",
													"logs:DescribeLogGroups",
													"logs:DescribeLogStreams",
												],
											},
											"effect": {
												"constant_value": "Allow",
											},
											"resources": {
												"constant_value": [
													"*",
												],
											},
											"sid": {
												"constant_value": "AWSVPCFlowLogsPushToCloudWatch",
											},
										},
									],
								},
								"mode":                "data",
								"name":                "vpc_flow_log_cloudwatch",
								"provider_config_key": "aws",
								"schema_version":      0,
								"type":                "aws_iam_policy_document",
							},
						],
						"variables": {
							"amazon_side_asn": {
								"default":     "64512",
								"description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN.",
							},
							"assign_ipv6_address_on_creation": {
								"default":     false,
								"description": "Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"azs": {
								"default":     [],
								"description": "A list of availability zones names or ids in the region",
							},
							"cidr": {
								"default":     "0.0.0.0/0",
								"description": "(Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` & `ipv4_ipam_pool_id`",
							},
							"create_database_internet_gateway_route": {
								"default":     false,
								"description": "Controls if an internet gateway route for public database access should be created",
							},
							"create_database_nat_gateway_route": {
								"default":     false,
								"description": "Controls if a nat gateway route should be created to give internet access to the database subnets",
							},
							"create_database_subnet_group": {
								"default":     true,
								"description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)",
							},
							"create_database_subnet_route_table": {
								"default":     false,
								"description": "Controls if separate route table for database should be created",
							},
							"create_egress_only_igw": {
								"default":     true,
								"description": "Controls if an Egress Only Internet Gateway is created and its related routes.",
							},
							"create_elasticache_subnet_group": {
								"default":     true,
								"description": "Controls if elasticache subnet group should be created",
							},
							"create_elasticache_subnet_route_table": {
								"default":     false,
								"description": "Controls if separate route table for elasticache should be created",
							},
							"create_flow_log_cloudwatch_iam_role": {
								"default":     false,
								"description": "Whether to create IAM role for VPC Flow Logs",
							},
							"create_flow_log_cloudwatch_log_group": {
								"default":     false,
								"description": "Whether to create CloudWatch log group for VPC Flow Logs",
							},
							"create_igw": {
								"default":     true,
								"description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them.",
							},
							"create_redshift_subnet_group": {
								"default":     true,
								"description": "Controls if redshift subnet group should be created",
							},
							"create_redshift_subnet_route_table": {
								"default":     false,
								"description": "Controls if separate route table for redshift should be created",
							},
							"create_vpc": {
								"default":     true,
								"description": "Controls if VPC should be created (it affects almost all resources)",
							},
							"customer_gateway_tags": {
								"default":     {},
								"description": "Additional tags for the Customer Gateway",
							},
							"customer_gateways": {
								"default":     {},
								"description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)",
							},
							"database_acl_tags": {
								"default":     {},
								"description": "Additional tags for the database subnets network ACL",
							},
							"database_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets",
							},
							"database_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Database subnets inbound network ACL rules",
							},
							"database_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Database subnets outbound network ACL rules",
							},
							"database_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the database route tables",
							},
							"database_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"database_subnet_group_name": {
								"description": "Name of database subnet group",
							},
							"database_subnet_group_tags": {
								"default":     {},
								"description": "Additional tags for the database subnet group",
							},
							"database_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"database_subnet_names": {
								"default":     [],
								"description": "Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated.",
							},
							"database_subnet_suffix": {
								"default":     "db",
								"description": "Suffix to append to database subnets name",
							},
							"database_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the database subnets",
							},
							"database_subnets": {
								"default":     [],
								"description": "A list of database subnets",
							},
							"default_network_acl_egress": {
								"default": [
									{
										"action":     "allow",
										"cidr_block": "0.0.0.0/0",
										"from_port":  "0",
										"protocol":   "-1",
										"rule_no":    "100",
										"to_port":    "0",
									},
									{
										"action":          "allow",
										"from_port":       "0",
										"ipv6_cidr_block": "::/0",
										"protocol":        "-1",
										"rule_no":         "101",
										"to_port":         "0",
									},
								],
								"description": "List of maps of egress rules to set on the Default Network ACL",
							},
							"default_network_acl_ingress": {
								"default": [
									{
										"action":     "allow",
										"cidr_block": "0.0.0.0/0",
										"from_port":  "0",
										"protocol":   "-1",
										"rule_no":    "100",
										"to_port":    "0",
									},
									{
										"action":          "allow",
										"from_port":       "0",
										"ipv6_cidr_block": "::/0",
										"protocol":        "-1",
										"rule_no":         "101",
										"to_port":         "0",
									},
								],
								"description": "List of maps of ingress rules to set on the Default Network ACL",
							},
							"default_network_acl_name": {
								"description": "Name to be used on the Default Network ACL",
							},
							"default_network_acl_tags": {
								"default":     {},
								"description": "Additional tags for the Default Network ACL",
							},
							"default_route_table_name": {
								"description": "Name to be used on the default route table",
							},
							"default_route_table_propagating_vgws": {
								"default":     [],
								"description": "List of virtual gateways for propagation",
							},
							"default_route_table_routes": {
								"default":     [],
								"description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route",
							},
							"default_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the default route table",
							},
							"default_security_group_egress": {
								"default":     [],
								"description": "List of maps of egress rules to set on the default security group",
							},
							"default_security_group_ingress": {
								"default":     [],
								"description": "List of maps of ingress rules to set on the default security group",
							},
							"default_security_group_name": {
								"description": "Name to be used on the default security group",
							},
							"default_security_group_tags": {
								"default":     {},
								"description": "Additional tags for the default security group",
							},
							"default_vpc_enable_classiclink": {
								"default":     false,
								"description": "[DEPRECATED](https://github.com/hashicorp/terraform/issues/31730) Should be true to enable ClassicLink in the Default VPC",
							},
							"default_vpc_enable_dns_hostnames": {
								"default":     false,
								"description": "Should be true to enable DNS hostnames in the Default VPC",
							},
							"default_vpc_enable_dns_support": {
								"default":     true,
								"description": "Should be true to enable DNS support in the Default VPC",
							},
							"default_vpc_name": {
								"description": "Name to be used on the Default VPC",
							},
							"default_vpc_tags": {
								"default":     {},
								"description": "Additional tags for the Default VPC",
							},
							"dhcp_options_domain_name": {
								"default":     "",
								"description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_domain_name_servers": {
								"default": [
									"AmazonProvidedDNS",
								],
								"description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_netbios_name_servers": {
								"default":     [],
								"description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_netbios_node_type": {
								"default":     "",
								"description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_ntp_servers": {
								"default":     [],
								"description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)",
							},
							"dhcp_options_tags": {
								"default":     {},
								"description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)",
							},
							"elasticache_acl_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache subnets network ACL",
							},
							"elasticache_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets",
							},
							"elasticache_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Elasticache subnets inbound network ACL rules",
							},
							"elasticache_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Elasticache subnets outbound network ACL rules",
							},
							"elasticache_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache route tables",
							},
							"elasticache_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"elasticache_subnet_group_name": {
								"description": "Name of elasticache subnet group",
							},
							"elasticache_subnet_group_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache subnet group",
							},
							"elasticache_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"elasticache_subnet_names": {
								"default":     [],
								"description": "Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated.",
							},
							"elasticache_subnet_suffix": {
								"default":     "elasticache",
								"description": "Suffix to append to elasticache subnets name",
							},
							"elasticache_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the elasticache subnets",
							},
							"elasticache_subnets": {
								"default":     [],
								"description": "A list of elasticache subnets",
							},
							"enable_classiclink": {
								"description": "[DEPRECATED](https://github.com/hashicorp/terraform/issues/31730) Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic.",
							},
							"enable_classiclink_dns_support": {
								"description": "[DEPRECATED](https://github.com/hashicorp/terraform/issues/31730) Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic.",
							},
							"enable_dhcp_options": {
								"default":     false,
								"description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type",
							},
							"enable_dns_hostnames": {
								"default":     false,
								"description": "Should be true to enable DNS hostnames in the VPC",
							},
							"enable_dns_support": {
								"default":     true,
								"description": "Should be true to enable DNS support in the VPC",
							},
							"enable_flow_log": {
								"default":     false,
								"description": "Whether or not to enable VPC Flow Logs",
							},
							"enable_ipv6": {
								"default":     false,
								"description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.",
							},
							"enable_nat_gateway": {
								"default":     false,
								"description": "Should be true if you want to provision NAT Gateways for each of your private networks",
							},
							"enable_public_redshift": {
								"default":     false,
								"description": "Controls if redshift should have public routing table",
							},
							"enable_vpn_gateway": {
								"default":     false,
								"description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC",
							},
							"external_nat_ip_ids": {
								"default":     [],
								"description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)",
							},
							"external_nat_ips": {
								"default":     [],
								"description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)",
							},
							"flow_log_cloudwatch_iam_role_arn": {
								"default":     "",
								"description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided.",
							},
							"flow_log_cloudwatch_log_group_kms_key_id": {
								"description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs.",
							},
							"flow_log_cloudwatch_log_group_name_prefix": {
								"default":     "/aws/vpc-flow-log/",
								"description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs.",
							},
							"flow_log_cloudwatch_log_group_name_suffix": {
								"default":     "",
								"description": "Specifies the name suffix of CloudWatch Log Group for VPC flow logs.",
							},
							"flow_log_cloudwatch_log_group_retention_in_days": {
								"description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs.",
							},
							"flow_log_destination_arn": {
								"default":     "",
								"description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided.",
							},
							"flow_log_destination_type": {
								"default":     "cloud-watch-logs",
								"description": "Type of flow log destination. Can be s3 or cloud-watch-logs.",
							},
							"flow_log_file_format": {
								"default":     "plain-text",
								"description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`.",
							},
							"flow_log_hive_compatible_partitions": {
								"default":     false,
								"description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3.",
							},
							"flow_log_log_format": {
								"description": "The fields to include in the flow log record, in the order in which they should appear.",
							},
							"flow_log_max_aggregation_interval": {
								"default":     600,
								"description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds.",
							},
							"flow_log_per_hour_partition": {
								"default":     false,
								"description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries.",
							},
							"flow_log_traffic_type": {
								"default":     "ALL",
								"description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL.",
							},
							"igw_tags": {
								"default":     {},
								"description": "Additional tags for the internet gateway",
							},
							"instance_tenancy": {
								"default":     "default",
								"description": "A tenancy option for instances launched into the VPC",
							},
							"intra_acl_tags": {
								"default":     {},
								"description": "Additional tags for the intra subnets network ACL",
							},
							"intra_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets",
							},
							"intra_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Intra subnets inbound network ACLs",
							},
							"intra_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Intra subnets outbound network ACLs",
							},
							"intra_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the intra route tables",
							},
							"intra_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"intra_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"intra_subnet_names": {
								"default":     [],
								"description": "Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated.",
							},
							"intra_subnet_suffix": {
								"default":     "intra",
								"description": "Suffix to append to intra subnets name",
							},
							"intra_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the intra subnets",
							},
							"intra_subnets": {
								"default":     [],
								"description": "A list of intra subnets",
							},
							"ipv4_ipam_pool_id": {
								"description": "(Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR.",
							},
							"ipv4_netmask_length": {
								"description": "(Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id.",
							},
							"ipv6_cidr": {
								"description": "(Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`.",
							},
							"ipv6_ipam_pool_id": {
								"description": "(Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`.",
							},
							"ipv6_netmask_length": {
								"description": "(Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`.",
							},
							"manage_default_network_acl": {
								"default":     false,
								"description": "Should be true to adopt and manage Default Network ACL",
							},
							"manage_default_route_table": {
								"default":     false,
								"description": "Should be true to manage default route table",
							},
							"manage_default_security_group": {
								"default":     false,
								"description": "Should be true to adopt and manage default security group",
							},
							"manage_default_vpc": {
								"default":     false,
								"description": "Should be true to adopt and manage Default VPC",
							},
							"map_public_ip_on_launch": {
								"default":     true,
								"description": "Should be false if you do not want to auto-assign public IP on launch",
							},
							"name": {
								"default":     "",
								"description": "Name to be used on all the resources as identifier",
							},
							"nat_eip_tags": {
								"default":     {},
								"description": "Additional tags for the NAT EIP",
							},
							"nat_gateway_destination_cidr_block": {
								"default":     "0.0.0.0/0",
								"description": "Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route.",
							},
							"nat_gateway_tags": {
								"default":     {},
								"description": "Additional tags for the NAT gateways",
							},
							"one_nat_gateway_per_az": {
								"default":     false,
								"description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`.",
							},
							"outpost_acl_tags": {
								"default":     {},
								"description": "Additional tags for the outpost subnets network ACL",
							},
							"outpost_arn": {
								"description": "ARN of Outpost you want to create a subnet in.",
							},
							"outpost_az": {
								"description": "AZ where Outpost is anchored.",
							},
							"outpost_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets",
							},
							"outpost_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Outpost subnets inbound network ACLs",
							},
							"outpost_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Outpost subnets outbound network ACLs",
							},
							"outpost_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on outpost subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"outpost_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"outpost_subnet_names": {
								"default":     [],
								"description": "Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated.",
							},
							"outpost_subnet_suffix": {
								"default":     "outpost",
								"description": "Suffix to append to outpost subnets name",
							},
							"outpost_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the outpost subnets",
							},
							"outpost_subnets": {
								"default":     [],
								"description": "A list of outpost subnets inside the VPC",
							},
							"private_acl_tags": {
								"default":     {},
								"description": "Additional tags for the private subnets network ACL",
							},
							"private_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets",
							},
							"private_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Private subnets inbound network ACLs",
							},
							"private_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Private subnets outbound network ACLs",
							},
							"private_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the private route tables",
							},
							"private_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"private_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"private_subnet_names": {
								"default":     [],
								"description": "Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated.",
							},
							"private_subnet_suffix": {
								"default":     "private",
								"description": "Suffix to append to private subnets name",
							},
							"private_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the private subnets",
							},
							"private_subnet_tags_per_az": {
								"default":     {},
								"description": "Additional tags for the private subnets where the primary key is the AZ",
							},
							"private_subnets": {
								"default":     [],
								"description": "A list of private subnets inside the VPC",
							},
							"propagate_intra_route_tables_vgw": {
								"default":     false,
								"description": "Should be true if you want route table propagation",
							},
							"propagate_private_route_tables_vgw": {
								"default":     false,
								"description": "Should be true if you want route table propagation",
							},
							"propagate_public_route_tables_vgw": {
								"default":     false,
								"description": "Should be true if you want route table propagation",
							},
							"public_acl_tags": {
								"default":     {},
								"description": "Additional tags for the public subnets network ACL",
							},
							"public_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets",
							},
							"public_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Public subnets inbound network ACLs",
							},
							"public_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Public subnets outbound network ACLs",
							},
							"public_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the public route tables",
							},
							"public_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"public_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"public_subnet_names": {
								"default":     [],
								"description": "Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated.",
							},
							"public_subnet_suffix": {
								"default":     "public",
								"description": "Suffix to append to public subnets name",
							},
							"public_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the public subnets",
							},
							"public_subnet_tags_per_az": {
								"default":     {},
								"description": "Additional tags for the public subnets where the primary key is the AZ",
							},
							"public_subnets": {
								"default":     [],
								"description": "A list of public subnets inside the VPC",
							},
							"putin_khuylo": {
								"default":     true,
								"description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!",
							},
							"redshift_acl_tags": {
								"default":     {},
								"description": "Additional tags for the redshift subnets network ACL",
							},
							"redshift_dedicated_network_acl": {
								"default":     false,
								"description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets",
							},
							"redshift_inbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Redshift subnets inbound network ACL rules",
							},
							"redshift_outbound_acl_rules": {
								"default": [
									{
										"cidr_block":  "0.0.0.0/0",
										"from_port":   "0",
										"protocol":    "-1",
										"rule_action": "allow",
										"rule_number": "100",
										"to_port":     "0",
									},
								],
								"description": "Redshift subnets outbound network ACL rules",
							},
							"redshift_route_table_tags": {
								"default":     {},
								"description": "Additional tags for the redshift route tables",
							},
							"redshift_subnet_assign_ipv6_address_on_creation": {
								"description": "Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch",
							},
							"redshift_subnet_group_name": {
								"description": "Name of redshift subnet group",
							},
							"redshift_subnet_group_tags": {
								"default":     {},
								"description": "Additional tags for the redshift subnet group",
							},
							"redshift_subnet_ipv6_prefixes": {
								"default":     [],
								"description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list",
							},
							"redshift_subnet_names": {
								"default":     [],
								"description": "Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated.",
							},
							"redshift_subnet_suffix": {
								"default":     "redshift",
								"description": "Suffix to append to redshift subnets name",
							},
							"redshift_subnet_tags": {
								"default":     {},
								"description": "Additional tags for the redshift subnets",
							},
							"redshift_subnets": {
								"default":     [],
								"description": "A list of redshift subnets",
							},
							"reuse_nat_ips": {
								"default":     false,
								"description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable",
							},
							"secondary_cidr_blocks": {
								"default":     [],
								"description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool",
							},
							"single_nat_gateway": {
								"default":     false,
								"description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks",
							},
							"tags": {
								"default":     {},
								"description": "A map of tags to add to all resources",
							},
							"use_ipam_pool": {
								"default":     false,
								"description": "Determines whether IPAM pool is used for CIDR allocation",
							},
							"vpc_flow_log_permissions_boundary": {
								"description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role",
							},
							"vpc_flow_log_tags": {
								"default":     {},
								"description": "Additional tags for the VPC Flow Logs",
							},
							"vpc_tags": {
								"default":     {},
								"description": "Additional tags for the VPC",
							},
							"vpn_gateway_az": {
								"description": "The Availability Zone for the VPN Gateway",
							},
							"vpn_gateway_id": {
								"default":     "",
								"description": "ID of VPN Gateway to attach to the VPC",
							},
							"vpn_gateway_tags": {
								"default":     {},
								"description": "Additional tags for the VPN gateway",
							},
						},
					},
					"source": "terraform-aws-modules/vpc/aws",
				},
			},
		},
	},
	"format_version": "1.1",
	"planned_values": {
		"root_module": {
			"child_modules": [
				{
					"address": "module.ec2",
					"resources": [
						{
							"address":        "module.ec2.aws_instance.this",
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"ami": true,
								"capacity_reservation_specification": [],
								"credit_specification":               [],
								"ebs_block_device":                   [],
								"enclave_options":                    [],
								"ephemeral_block_device":             [],
								"ipv6_addresses":                     [],
								"launch_template":                    [],
								"maintenance_options":                [],
								"metadata_options":                   [],
								"network_interface": [
									{},
								],
								"private_dns_name_options": [],
								"root_block_device":        [],
								"secondary_private_ips":    [],
								"security_groups":          [],
								"tags":                     {},
								"tags_all":                 {},
								"vpc_security_group_ids":   [],
							},
							"type": "aws_instance",
							"values": {
								"ami": "REDACTED_SENSITIVE",
								"credit_specification": [],
								"get_password_data":    false,
								"hibernation":          null,
								"instance_type":        "t3.micro",
								"launch_template":      [],
								"network_interface": [
									{
										"delete_on_termination": false,
										"device_index":          0,
										"network_card_index":    0,
									},
								],
								"source_dest_check": null,
								"tags": {
									"Name": "tfc-demo-prod",
								},
								"tags_all": {
									"Env":        "prod",
									"Name":       "tfc-demo-prod",
									"SystemName": "tfc-demo",
									"Terraform":  "true",
								},
								"timeouts":                    null,
								"user_data_replace_on_change": false,
								"volume_tags":                 null,
							},
						},
						{
							"address":        "module.ec2.aws_network_interface.this",
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"attachment":        [],
								"ipv4_prefixes":     [],
								"ipv6_address_list": [],
								"ipv6_addresses":    [],
								"ipv6_prefixes":     [],
								"private_ip_list":   [],
								"private_ips":       [],
								"security_groups":   [],
								"tags_all":          {},
							},
							"type": "aws_network_interface",
							"values": {
								"description":               null,
								"ipv6_address_list_enabled": false,
								"private_ip_list_enabled":   false,
								"source_dest_check":         true,
								"tags":                      null,
								"tags_all": {
									"Env":        "prod",
									"SystemName": "tfc-demo",
									"Terraform":  "true",
								},
							},
						},
					],
				},
				{
					"address": "module.vpc",
					"resources": [
						{
							"address":        "module.vpc.aws_internet_gateway.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_internet_gateway",
							"values": {
								"tags": {
									"Name": "prod-vpc",
								},
								"tags_all": {
									"Env":        "prod",
									"Name":       "prod-vpc",
									"SystemName": "tfc-demo",
									"Terraform":  "true",
								},
								"timeouts": null,
							},
						},
						{
							"address":        "module.vpc.aws_route.public_internet_gateway[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "public_internet_gateway",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"timeouts": {},
							},
							"type": "aws_route",
							"values": {
								"carrier_gateway_id":          null,
								"core_network_arn":            null,
								"destination_cidr_block":      "0.0.0.0/0",
								"destination_ipv6_cidr_block": null,
								"destination_prefix_list_id":  null,
								"egress_only_gateway_id":      null,
								"local_gateway_id":            null,
								"nat_gateway_id":              null,
								"timeouts": {
									"create": "5m",
									"delete": null,
									"update": null,
								},
								"transit_gateway_id":        null,
								"vpc_endpoint_id":           null,
								"vpc_peering_connection_id": null,
							},
						},
						{
							"address":        "module.vpc.aws_route_table.private[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "private",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"propagating_vgws": [],
								"route":            [],
								"tags":             {},
								"tags_all":         {},
							},
							"type": "aws_route_table",
							"values": {
								"tags": {
									"Name": "prod-vpc-private-ap-northeast-1a",
								},
								"tags_all": {
									"Env":        "prod",
									"Name":       "prod-vpc-private-ap-northeast-1a",
									"SystemName": "tfc-demo",
									"Terraform":  "true",
								},
								"timeouts": null,
							},
						},
						{
							"address":        "module.vpc.aws_route_table.private[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "private",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"propagating_vgws": [],
								"route":            [],
								"tags":             {},
								"tags_all":         {},
							},
							"type": "aws_route_table",
							"values": {
								"tags": {
									"Name": "prod-vpc-private-ap-northeast-1c",
								},
								"tags_all": {
									"Env":        "prod",
									"Name":       "prod-vpc-private-ap-northeast-1c",
									"SystemName": "tfc-demo",
									"Terraform":  "true",
								},
								"timeouts": null,
							},
						},
						{
							"address":        "module.vpc.aws_route_table.public[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 0,
							"sensitive_values": {
								"propagating_vgws": [],
								"route":            [],
								"tags":             {},
								"tags_all":         {},
							},
							"type": "aws_route_table",
							"values": {
								"tags": {
									"Name": "prod-vpc-public",
								},
								"tags_all": {
									"Env":        "prod",
									"Name":       "prod-vpc-public",
									"SystemName": "tfc-demo",
									"Terraform":  "true",
								},
								"timeouts": null,
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.private[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "private",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id": null,
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.private[1]",
							"index":            1,
							"mode":             "managed",
							"name":             "private",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id": null,
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.public[0]",
							"index":            0,
							"mode":             "managed",
							"name":             "public",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id": null,
							},
						},
						{
							"address":          "module.vpc.aws_route_table_association.public[1]",
							"index":            1,
							"mode":             "managed",
							"name":             "public",
							"provider_name":    "registry.terraform.io/hashicorp/aws",
							"schema_version":   0,
							"sensitive_values": {},
							"type":             "aws_route_table_association",
							"values": {
								"gateway_id": null,
							},
						},
						{
							"address":        "module.vpc.aws_subnet.private[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "private",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_subnet",
							"values": {
								"assign_ipv6_address_on_creation":                false,
								"availability_zone":                              "ap-northeast-1a",
								"cidr_block":                                     "10.10.1.0/24",
								"customer_owned_ipv4_pool":                       null,
								"enable_dns64":                                   false,
								"enable_resource_name_dns_a_record_on_launch":    false,
								"enable_resource_name_dns_aaaa_record_on_launch": false,
								"ipv6_cidr_block":                                null,
								"ipv6_native":                                    false,
								"map_customer_owned_ip_on_launch":                null,
								"map_public_ip_on_launch":                        false,
								"outpost_arn":                                    null,
								"tags": {
									"Name": "prod-vpc-private-ap-northeast-1a",
								},
								"tags_all": {
									"Env":        "prod",
									"Name":       "prod-vpc-private-ap-northeast-1a",
									"SystemName": "tfc-demo",
									"Terraform":  "true",
								},
								"timeouts": null,
							},
						},
						{
							"address":        "module.vpc.aws_subnet.private[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "private",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_subnet",
							"values": {
								"assign_ipv6_address_on_creation":                false,
								"availability_zone":                              "ap-northeast-1c",
								"cidr_block":                                     "10.10.2.0/24",
								"customer_owned_ipv4_pool":                       null,
								"enable_dns64":                                   false,
								"enable_resource_name_dns_a_record_on_launch":    false,
								"enable_resource_name_dns_aaaa_record_on_launch": false,
								"ipv6_cidr_block":                                null,
								"ipv6_native":                                    false,
								"map_customer_owned_ip_on_launch":                null,
								"map_public_ip_on_launch":                        false,
								"outpost_arn":                                    null,
								"tags": {
									"Name": "prod-vpc-private-ap-northeast-1c",
								},
								"tags_all": {
									"Env":        "prod",
									"Name":       "prod-vpc-private-ap-northeast-1c",
									"SystemName": "tfc-demo",
									"Terraform":  "true",
								},
								"timeouts": null,
							},
						},
						{
							"address":        "module.vpc.aws_subnet.public[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_subnet",
							"values": {
								"assign_ipv6_address_on_creation":                false,
								"availability_zone":                              "ap-northeast-1a",
								"cidr_block":                                     "10.10.101.0/24",
								"customer_owned_ipv4_pool":                       null,
								"enable_dns64":                                   false,
								"enable_resource_name_dns_a_record_on_launch":    false,
								"enable_resource_name_dns_aaaa_record_on_launch": false,
								"ipv6_cidr_block":                                null,
								"ipv6_native":                                    false,
								"map_customer_owned_ip_on_launch":                null,
								"map_public_ip_on_launch":                        true,
								"outpost_arn":                                    null,
								"tags": {
									"Name": "prod-vpc-public-ap-northeast-1a",
								},
								"tags_all": {
									"Env":        "prod",
									"Name":       "prod-vpc-public-ap-northeast-1a",
									"SystemName": "tfc-demo",
									"Terraform":  "true",
								},
								"timeouts": null,
							},
						},
						{
							"address":        "module.vpc.aws_subnet.public[1]",
							"index":          1,
							"mode":           "managed",
							"name":           "public",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_subnet",
							"values": {
								"assign_ipv6_address_on_creation":                false,
								"availability_zone":                              "ap-northeast-1c",
								"cidr_block":                                     "10.10.102.0/24",
								"customer_owned_ipv4_pool":                       null,
								"enable_dns64":                                   false,
								"enable_resource_name_dns_a_record_on_launch":    false,
								"enable_resource_name_dns_aaaa_record_on_launch": false,
								"ipv6_cidr_block":                                null,
								"ipv6_native":                                    false,
								"map_customer_owned_ip_on_launch":                null,
								"map_public_ip_on_launch":                        true,
								"outpost_arn":                                    null,
								"tags": {
									"Name": "prod-vpc-public-ap-northeast-1c",
								},
								"tags_all": {
									"Env":        "prod",
									"Name":       "prod-vpc-public-ap-northeast-1c",
									"SystemName": "tfc-demo",
									"Terraform":  "true",
								},
								"timeouts": null,
							},
						},
						{
							"address":        "module.vpc.aws_vpc.this[0]",
							"index":          0,
							"mode":           "managed",
							"name":           "this",
							"provider_name":  "registry.terraform.io/hashicorp/aws",
							"schema_version": 1,
							"sensitive_values": {
								"tags":     {},
								"tags_all": {},
							},
							"type": "aws_vpc",
							"values": {
								"assign_generated_ipv6_cidr_block": null,
								"cidr_block":                       "10.10.0.0/16",
								"enable_dns_hostnames":             false,
								"enable_dns_support":               true,
								"instance_tenancy":                 "default",
								"ipv4_ipam_pool_id":                null,
								"ipv4_netmask_length":              null,
								"ipv6_ipam_pool_id":                null,
								"ipv6_netmask_length":              null,
								"tags": {
									"Name": "prod-vpc",
								},
								"tags_all": {
									"Env":        "prod",
									"Name":       "prod-vpc",
									"SystemName": "tfc-demo",
									"Terraform":  "true",
								},
							},
						},
					],
				},
			],
		},
	},
	"prior_state": {
		"format_version":    "1.0",
		"terraform_version": "1.3.7",
		"values": {
			"root_module": {
				"child_modules": [
					{
						"address": "module.ec2",
						"resources": [
							{
								"address":          "module.ec2.data.aws_ssm_parameter.amzn2_ami",
								"mode":             "data",
								"name":             "amzn2_ami",
								"provider_name":    "registry.terraform.io/hashicorp/aws",
								"schema_version":   0,
								"sensitive_values": {},
								"type":             "aws_ssm_parameter",
								"values": {
									"arn":             "arn:aws:ssm:ap-northeast-1::parameter/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
									"id":              "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
									"name":            "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
									"type":            "String",
									"value":           "ami-0ad64728720227ff8",
									"version":         78,
									"with_decryption": true,
								},
							},
						],
					},
				],
			},
		},
	},
	"relevant_attributes": [
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.elasticache",
		},
		{
			"attribute": [
				"vpc_id",
			],
			"resource": "module.vpc.aws_vpc_ipv4_cidr_block_association.this[0]",
		},
		{
			"attribute": [
				"default_network_acl_id",
			],
			"resource": "module.vpc.aws_default_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.intra",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_vpn_gateway.this[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_network_acl.intra[0]",
		},
		{
			"attribute": [
				"main_route_table_id",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_network_acl.database[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_network_acl.redshift[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.outpost",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.ec2.aws_network_interface.this",
		},
		{
			"attribute": [
				"instance_tenancy",
			],
			"resource": "module.vpc.aws_default_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_customer_gateway.this",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_eip.nat",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_flow_log.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.redshift",
		},
		{
			"attribute": [
				"cidr_block",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"default_route_table_id",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"name",
			],
			"resource": "module.vpc.aws_elasticache_subnet_group.elasticache[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_route.public_internet_gateway[0]",
		},
		{
			"attribute": [
				"default_route_table_id",
			],
			"resource": "module.vpc.aws_default_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.redshift",
		},
		{
			"attribute": [
				"name",
			],
			"resource": "module.vpc.aws_db_subnet_group.database[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_network_acl.elasticache[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_vpc_ipv4_cidr_block_association.this",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_network_acl.elasticache[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.elasticache",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_network_acl.database[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_redshift_subnet_group.redshift[0]",
		},
		{
			"attribute": [
				"vpn_gateway_id",
			],
			"resource": "module.vpc.aws_vpn_gateway_attachment.this[0]",
		},
		{
			"attribute": [
				"default_security_group_id",
			],
			"resource": "module.vpc.aws_default_vpc.this[0]",
		},
		{
			"attribute": [
				"cidr_block",
			],
			"resource": "module.vpc.aws_default_vpc.this[0]",
		},
		{
			"attribute": [
				"instance_tenancy",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_db_subnet_group.database[0]",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_network_acl.private[0]",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_cloudwatch_log_group.flow_log[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.database",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.private",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.private",
		},
		{
			"attribute": [
				"enable_dns_hostnames",
			],
			"resource": "module.vpc.aws_default_vpc.this[0]",
		},
		{
			"attribute": [
				"default_security_group_id",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_route.public_internet_gateway_ipv6[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_vpc_dhcp_options.this[0]",
		},
		{
			"attribute": [
				"enable_dns_support",
			],
			"resource": "module.vpc.aws_default_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.intra",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.elasticache",
		},
		{
			"attribute": [
				"owner_id",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route.private_nat_gateway",
		},
		{
			"attribute": [
				"default_network_acl_id",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"enable_dns_support",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_elasticache_subnet_group.elasticache[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_network_acl.outpost[0]",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_network_acl.outpost[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.intra",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.public",
		},
		{
			"attribute": [
				"value",
			],
			"resource": "module.ec2.data.aws_ssm_parameter.amzn2_ami",
		},
		{
			"attribute": [
				"ipv6_association_id",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.database",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_network_acl.intra[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_network_acl.private[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.private",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_subnet.public",
		},
		{
			"attribute": [
				"enable_dns_hostnames",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.redshift",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_nat_gateway.this",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_network_acl.public[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_egress_only_internet_gateway.this",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_network_acl.redshift[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_vpn_gateway.this[0]",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_network_acl.public[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_internet_gateway.this[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_default_vpc.this[0]",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_default_vpc.this[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_egress_only_internet_gateway.this[0]",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_internet_gateway.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route.database_nat_gateway",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_route.database_internet_gateway[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_route_table.public[0]",
		},
		{
			"attribute": [
				"main_route_table_id",
			],
			"resource": "module.vpc.aws_default_vpc.this[0]",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.database",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route.private_ipv6_egress",
		},
		{
			"attribute": [
				"arn",
			],
			"resource": "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0]",
		},
		{
			"attribute": [
				"ipv6_cidr_block",
			],
			"resource": "module.vpc.aws_vpc.this[0]",
		},
		{
			"attribute": [
				"id",
			],
			"resource": "module.vpc.aws_route.database_ipv6_egress[0]",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table.public",
		},
		{
			"attribute": [],
			"resource":  "module.vpc.aws_route_table_association.redshift_public",
		},
	],
	"resource_changes": [
		{
			"address": "module.ec2.aws_instance.this",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"ami": "REDACTED_SENSITIVE",
					"credit_specification": [],
					"get_password_data":    false,
					"hibernation":          null,
					"instance_type":        "t3.micro",
					"launch_template":      [],
					"network_interface": [
						{
							"delete_on_termination": false,
							"device_index":          0,
							"network_card_index":    0,
						},
					],
					"source_dest_check": null,
					"tags": {
						"Name": "tfc-demo-prod",
					},
					"tags_all": {
						"Env":        "prod",
						"Name":       "tfc-demo-prod",
						"SystemName": "tfc-demo",
						"Terraform":  "true",
					},
					"timeouts":                    null,
					"user_data_replace_on_change": false,
					"volume_tags":                 null,
				},
				"after_sensitive": {
					"ami": true,
					"capacity_reservation_specification": [],
					"credit_specification":               [],
					"ebs_block_device":                   [],
					"enclave_options":                    [],
					"ephemeral_block_device":             [],
					"ipv6_addresses":                     [],
					"launch_template":                    [],
					"maintenance_options":                [],
					"metadata_options":                   [],
					"network_interface": [
						{},
					],
					"private_dns_name_options": [],
					"root_block_device":        [],
					"secondary_private_ips":    [],
					"security_groups":          [],
					"tags":                     {},
					"tags_all":                 {},
					"vpc_security_group_ids":   [],
				},
				"after_unknown": {
					"arn": true,
					"associate_public_ip_address":        true,
					"availability_zone":                  true,
					"capacity_reservation_specification": true,
					"cpu_core_count":                     true,
					"cpu_threads_per_core":               true,
					"credit_specification":               [],
					"disable_api_stop":                   true,
					"disable_api_termination":            true,
					"ebs_block_device":                   true,
					"ebs_optimized":                      true,
					"enclave_options":                    true,
					"ephemeral_block_device":             true,
					"host_id":                            true,
					"host_resource_group_arn":            true,
					"iam_instance_profile":               true,
					"id": true,
					"instance_initiated_shutdown_behavior": true,
					"instance_state":                       true,
					"ipv6_address_count":                   true,
					"ipv6_addresses":                       true,
					"key_name":                             true,
					"launch_template":                      [],
					"maintenance_options":                  true,
					"metadata_options":                     true,
					"monitoring":                           true,
					"network_interface": [
						{
							"network_interface_id": true,
						},
					],
					"outpost_arn":                  true,
					"password_data":                true,
					"placement_group":              true,
					"placement_partition_number":   true,
					"primary_network_interface_id": true,
					"private_dns":                  true,
					"private_dns_name_options":     true,
					"private_ip":                   true,
					"public_dns":                   true,
					"public_ip":                    true,
					"root_block_device":            true,
					"secondary_private_ips":        true,
					"security_groups":              true,
					"subnet_id":                    true,
					"tags":                         {},
					"tags_all":                     {},
					"tenancy":                      true,
					"user_data":                    true,
					"user_data_base64":             true,
					"vpc_security_group_ids":       true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.ec2",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_instance",
		},
		{
			"address": "module.ec2.aws_network_interface.this",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"description":               null,
					"ipv6_address_list_enabled": false,
					"private_ip_list_enabled":   false,
					"source_dest_check":         true,
					"tags":                      null,
					"tags_all": {
						"Env":        "prod",
						"SystemName": "tfc-demo",
						"Terraform":  "true",
					},
				},
				"after_sensitive": {
					"attachment":        [],
					"ipv4_prefixes":     [],
					"ipv6_address_list": [],
					"ipv6_addresses":    [],
					"ipv6_prefixes":     [],
					"private_ip_list":   [],
					"private_ips":       [],
					"security_groups":   [],
					"tags_all":          {},
				},
				"after_unknown": {
					"arn":                true,
					"attachment":         true,
					"id":                 true,
					"interface_type":     true,
					"ipv4_prefix_count":  true,
					"ipv4_prefixes":      true,
					"ipv6_address_count": true,
					"ipv6_address_list":  true,
					"ipv6_addresses":     true,
					"ipv6_prefix_count":  true,
					"ipv6_prefixes":      true,
					"mac_address":        true,
					"outpost_arn":        true,
					"owner_id":           true,
					"private_dns_name":   true,
					"private_ip":         true,
					"private_ip_list":    true,
					"private_ips":        true,
					"private_ips_count":  true,
					"security_groups":    true,
					"subnet_id":          true,
					"tags_all":           {},
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.ec2",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_network_interface",
		},
		{
			"address": "module.vpc.aws_internet_gateway.this[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"tags": {
						"Name": "prod-vpc",
					},
					"tags_all": {
						"Env":        "prod",
						"Name":       "prod-vpc",
						"SystemName": "tfc-demo",
						"Terraform":  "true",
					},
					"timeouts": null,
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn":      true,
					"id":       true,
					"owner_id": true,
					"tags":     {},
					"tags_all": {},
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_internet_gateway",
		},
		{
			"address": "module.vpc.aws_route.public_internet_gateway[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"carrier_gateway_id":          null,
					"core_network_arn":            null,
					"destination_cidr_block":      "0.0.0.0/0",
					"destination_ipv6_cidr_block": null,
					"destination_prefix_list_id":  null,
					"egress_only_gateway_id":      null,
					"local_gateway_id":            null,
					"nat_gateway_id":              null,
					"timeouts": {
						"create": "5m",
						"delete": null,
						"update": null,
					},
					"transit_gateway_id":        null,
					"vpc_endpoint_id":           null,
					"vpc_peering_connection_id": null,
				},
				"after_sensitive": {
					"timeouts": {},
				},
				"after_unknown": {
					"gateway_id":           true,
					"id":                   true,
					"instance_id":          true,
					"instance_owner_id":    true,
					"network_interface_id": true,
					"origin":               true,
					"route_table_id":       true,
					"state":                true,
					"timeouts":             {},
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public_internet_gateway",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route",
		},
		{
			"address": "module.vpc.aws_route_table.private[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"tags": {
						"Name": "prod-vpc-private-ap-northeast-1a",
					},
					"tags_all": {
						"Env":        "prod",
						"Name":       "prod-vpc-private-ap-northeast-1a",
						"SystemName": "tfc-demo",
						"Terraform":  "true",
					},
					"timeouts": null,
				},
				"after_sensitive": {
					"propagating_vgws": [],
					"route":            [],
					"tags":             {},
					"tags_all":         {},
				},
				"after_unknown": {
					"arn":              true,
					"id":               true,
					"owner_id":         true,
					"propagating_vgws": true,
					"route":            true,
					"tags":             {},
					"tags_all":         {},
					"vpc_id":           true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table",
		},
		{
			"address": "module.vpc.aws_route_table.private[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"tags": {
						"Name": "prod-vpc-private-ap-northeast-1c",
					},
					"tags_all": {
						"Env":        "prod",
						"Name":       "prod-vpc-private-ap-northeast-1c",
						"SystemName": "tfc-demo",
						"Terraform":  "true",
					},
					"timeouts": null,
				},
				"after_sensitive": {
					"propagating_vgws": [],
					"route":            [],
					"tags":             {},
					"tags_all":         {},
				},
				"after_unknown": {
					"arn":              true,
					"id":               true,
					"owner_id":         true,
					"propagating_vgws": true,
					"route":            true,
					"tags":             {},
					"tags_all":         {},
					"vpc_id":           true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table",
		},
		{
			"address": "module.vpc.aws_route_table.public[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"tags": {
						"Name": "prod-vpc-public",
					},
					"tags_all": {
						"Env":        "prod",
						"Name":       "prod-vpc-public",
						"SystemName": "tfc-demo",
						"Terraform":  "true",
					},
					"timeouts": null,
				},
				"after_sensitive": {
					"propagating_vgws": [],
					"route":            [],
					"tags":             {},
					"tags_all":         {},
				},
				"after_unknown": {
					"arn":              true,
					"id":               true,
					"owner_id":         true,
					"propagating_vgws": true,
					"route":            true,
					"tags":             {},
					"tags_all":         {},
					"vpc_id":           true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table",
		},
		{
			"address": "module.vpc.aws_route_table_association.private[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"gateway_id": null,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":             true,
					"route_table_id": true,
					"subnet_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_route_table_association.private[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"gateway_id": null,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":             true,
					"route_table_id": true,
					"subnet_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_route_table_association.public[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"gateway_id": null,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":             true,
					"route_table_id": true,
					"subnet_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_route_table_association.public[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"gateway_id": null,
				},
				"after_sensitive": {},
				"after_unknown": {
					"id":             true,
					"route_table_id": true,
					"subnet_id":      true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_route_table_association",
		},
		{
			"address": "module.vpc.aws_subnet.private[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "ap-northeast-1a",
					"cidr_block":                                     "10.10.1.0/24",
					"customer_owned_ipv4_pool":                       null,
					"enable_dns64":                                   false,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"ipv6_cidr_block":                                null,
					"ipv6_native":                                    false,
					"map_customer_owned_ip_on_launch":                null,
					"map_public_ip_on_launch":                        false,
					"outpost_arn":                                    null,
					"tags": {
						"Name": "prod-vpc-private-ap-northeast-1a",
					},
					"tags_all": {
						"Env":        "prod",
						"Name":       "prod-vpc-private-ap-northeast-1a",
						"SystemName": "tfc-demo",
						"Terraform":  "true",
					},
					"timeouts": null,
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn": true,
					"availability_zone_id": true,
					"id": true,
					"ipv6_cidr_block_association_id":      true,
					"owner_id":                            true,
					"private_dns_hostname_type_on_launch": true,
					"tags":     {},
					"tags_all": {},
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_subnet.private[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "ap-northeast-1c",
					"cidr_block":                                     "10.10.2.0/24",
					"customer_owned_ipv4_pool":                       null,
					"enable_dns64":                                   false,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"ipv6_cidr_block":                                null,
					"ipv6_native":                                    false,
					"map_customer_owned_ip_on_launch":                null,
					"map_public_ip_on_launch":                        false,
					"outpost_arn":                                    null,
					"tags": {
						"Name": "prod-vpc-private-ap-northeast-1c",
					},
					"tags_all": {
						"Env":        "prod",
						"Name":       "prod-vpc-private-ap-northeast-1c",
						"SystemName": "tfc-demo",
						"Terraform":  "true",
					},
					"timeouts": null,
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn": true,
					"availability_zone_id": true,
					"id": true,
					"ipv6_cidr_block_association_id":      true,
					"owner_id":                            true,
					"private_dns_hostname_type_on_launch": true,
					"tags":     {},
					"tags_all": {},
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "private",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_subnet.public[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "ap-northeast-1a",
					"cidr_block":                                     "10.10.101.0/24",
					"customer_owned_ipv4_pool":                       null,
					"enable_dns64":                                   false,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"ipv6_cidr_block":                                null,
					"ipv6_native":                                    false,
					"map_customer_owned_ip_on_launch":                null,
					"map_public_ip_on_launch":                        true,
					"outpost_arn":                                    null,
					"tags": {
						"Name": "prod-vpc-public-ap-northeast-1a",
					},
					"tags_all": {
						"Env":        "prod",
						"Name":       "prod-vpc-public-ap-northeast-1a",
						"SystemName": "tfc-demo",
						"Terraform":  "true",
					},
					"timeouts": null,
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn": true,
					"availability_zone_id": true,
					"id": true,
					"ipv6_cidr_block_association_id":      true,
					"owner_id":                            true,
					"private_dns_hostname_type_on_launch": true,
					"tags":     {},
					"tags_all": {},
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_subnet.public[1]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_ipv6_address_on_creation":                false,
					"availability_zone":                              "ap-northeast-1c",
					"cidr_block":                                     "10.10.102.0/24",
					"customer_owned_ipv4_pool":                       null,
					"enable_dns64":                                   false,
					"enable_resource_name_dns_a_record_on_launch":    false,
					"enable_resource_name_dns_aaaa_record_on_launch": false,
					"ipv6_cidr_block":                                null,
					"ipv6_native":                                    false,
					"map_customer_owned_ip_on_launch":                null,
					"map_public_ip_on_launch":                        true,
					"outpost_arn":                                    null,
					"tags": {
						"Name": "prod-vpc-public-ap-northeast-1c",
					},
					"tags_all": {
						"Env":        "prod",
						"Name":       "prod-vpc-public-ap-northeast-1c",
						"SystemName": "tfc-demo",
						"Terraform":  "true",
					},
					"timeouts": null,
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn": true,
					"availability_zone_id": true,
					"id": true,
					"ipv6_cidr_block_association_id":      true,
					"owner_id":                            true,
					"private_dns_hostname_type_on_launch": true,
					"tags":     {},
					"tags_all": {},
					"vpc_id":   true,
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          1,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "public",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_subnet",
		},
		{
			"address": "module.vpc.aws_vpc.this[0]",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"assign_generated_ipv6_cidr_block": null,
					"cidr_block":                       "10.10.0.0/16",
					"enable_dns_hostnames":             false,
					"enable_dns_support":               true,
					"instance_tenancy":                 "default",
					"ipv4_ipam_pool_id":                null,
					"ipv4_netmask_length":              null,
					"ipv6_ipam_pool_id":                null,
					"ipv6_netmask_length":              null,
					"tags": {
						"Name": "prod-vpc",
					},
					"tags_all": {
						"Env":        "prod",
						"Name":       "prod-vpc",
						"SystemName": "tfc-demo",
						"Terraform":  "true",
					},
				},
				"after_sensitive": {
					"tags":     {},
					"tags_all": {},
				},
				"after_unknown": {
					"arn": true,
					"default_network_acl_id":               true,
					"default_route_table_id":               true,
					"default_security_group_id":            true,
					"dhcp_options_id":                      true,
					"enable_classiclink":                   true,
					"enable_classiclink_dns_support":       true,
					"enable_network_address_usage_metrics": true,
					"id": true,
					"ipv6_association_id":                  true,
					"ipv6_cidr_block":                      true,
					"ipv6_cidr_block_network_border_group": true,
					"main_route_table_id":                  true,
					"owner_id":                             true,
					"tags":                                 {},
					"tags_all":                             {},
				},
				"before":           null,
				"before_sensitive": false,
			},
			"index":          0,
			"mode":           "managed",
			"module_address": "module.vpc",
			"name":           "this",
			"provider_name":  "registry.terraform.io/hashicorp/aws",
			"type":           "aws_vpc",
		},
	],
	"terraform_version": "1.3.7",
}
